{"ast":null,"code":"import _classCallCheck from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{CopyToClipboard}from\"react-copy-to-clipboard\";import generator from\"generate-password\";import VisibilityOutlinedIcon from'@material-ui/icons/VisibilityOutlined';import{connect}from\"react-redux\";import*as actions from\"../../actions/actions\";import FileCopyOutlinedIcon from\"@material-ui/icons/FileCopyOutlined\";import RotateLeftOutlinedIcon from\"@material-ui/icons/RotateLeftOutlined\";import BtnWithTooltip from\"../../parts/BtnWithTooltip\";import CheckCircleOutlineOutlinedIcon from'@material-ui/icons/CheckCircleOutlineOutlined';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import VisibilityOffOutlinedIcon from'@material-ui/icons/VisibilityOffOutlined';var PasswordInput=/*#__PURE__*/function(_Component){_inherits(PasswordInput,_Component);function PasswordInput(){var _this;_classCallCheck(this,PasswordInput);_this=_possibleConstructorReturn(this,_getPrototypeOf(PasswordInput).call(this));_this.generatePassword=function(){var password=generator.generate({length:10,uppercase:false});_this.setState({generated:true,error:false});setTimeout(function(){_this.setState({generated:false});},3000);_this.handleChange(password);};_this.handleChange=function(value){var input=_this.props.input;var property_name=input.property_name;_this.props.updateParentState(\"pw_changed\",true);_this.props.handleUpdate(property_name,value);};_this.handleBlur=function(){var value=_this.props.value;_this.setState({active:value});_this.setState({error:!value});};_this.handleFocus=function(){_this.setState({active:true,validation_error:false,error:false});};_this.handleCopy=function(){_this.setState({copied:true});setTimeout(function(){_this.setState({copied:false});},2000);};_this.state={};return _this;}_createClass(PasswordInput,[{key:\"componentDidMount\",value:function componentDidMount(){var is_edit=this.props.is_edit;if(is_edit){this.setState({active:true});}}},{key:\"componentWillReceiveProps\",value:function componentWillReceiveProps(nextProps){var _this$props=this.props,validate=_this$props.validate,input=_this$props.input,value=_this$props.value,is_edit=_this$props.is_edit;var type=input.type;if(nextProps.validate!==validate&&!is_edit){this.handleBlur(type,value);}}},{key:\"render\",value:function render(){var _this2=this;var _this$props2=this.props,input=_this$props2.input,value=_this$props2.value,is_edit=_this$props2.is_edit;var empty_text=input.empty_text,label=input.label;var _this$state=this.state,active=_this$state.active,error=_this$state.error,generated=_this$state.generated,copied=_this$state.copied,show_password=_this$state.show_password;var system_text=this.props.global.system_text;return React.createElement(\"div\",{className:active||value?\"password text__input--active flex__start\":\"password flex__start\"},React.createElement(\"section\",{className:\"password__input\"},React.createElement(\"input\",{placeholder:system_text[label],onChange:function onChange(e){return _this2.handleChange(e.target.value);},type:show_password?'text':\"password\",value:value?value:!value&&is_edit?\"********\":\"\",autocomplete:\"new-password\",onBlur:function onBlur(e){return _this2.handleBlur();},onFocus:function onFocus(e){return _this2.handleFocus();}}),React.createElement(\"button\",{type:\"button\",className:\"flex__center\",onClick:function onClick(){return _this2.setState({show_password:!show_password});}},show_password?React.createElement(VisibilityOffOutlinedIcon,null):React.createElement(VisibilityOutlinedIcon,null))),React.createElement(\"section\",{className:\"password__actions flex__between\"},React.createElement(CopyToClipboard,{text:value,onCopy:function onCopy(){return _this2.handleCopy();}},React.createElement(\"aside\",{style:{opacity:value?1:0.7,pointerEvents:value?'all':'none'}},React.createElement(BtnWithTooltip,{svg:copied?React.createElement(CheckCircleOutlineOutlinedIcon,null):React.createElement(FileCopyOutlinedIcon,null),tooltip:system_text.COPY}))),React.createElement(BtnWithTooltip,{svg:generated?React.createElement(CheckCircleOutlineOutlinedIcon,null):React.createElement(LockOutlinedIcon,null),handleClick:this.generatePassword,value:true,tooltip:system_text.GENERATE})),error?React.createElement(\"p\",{className:\"text__input__error\"},system_text[empty_text]):\"\");}}]);return PasswordInput;}(Component);function mapStateToProps(_ref){var global=_ref.global;return{global:global};}export default connect(mapStateToProps,actions)(PasswordInput);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/parts/inputs/PasswordInput.jsx"],"names":["React","Component","CopyToClipboard","generator","VisibilityOutlinedIcon","connect","actions","FileCopyOutlinedIcon","RotateLeftOutlinedIcon","BtnWithTooltip","CheckCircleOutlineOutlinedIcon","LockOutlinedIcon","VisibilityOffOutlinedIcon","PasswordInput","generatePassword","password","generate","length","uppercase","setState","generated","error","setTimeout","handleChange","value","input","props","property_name","updateParentState","handleUpdate","handleBlur","active","handleFocus","validation_error","handleCopy","copied","state","is_edit","nextProps","validate","type","empty_text","label","show_password","system_text","global","e","target","opacity","pointerEvents","COPY","GENERATE","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport generator from \"generate-password\";\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport RotateLeftOutlinedIcon from \"@material-ui/icons/RotateLeftOutlined\";\nimport BtnWithTooltip from \"../../parts/BtnWithTooltip\";\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nclass PasswordInput extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    const { is_edit } = this.props;\n    if (is_edit) {\n      this.setState({\n        active: true,\n      });\n    }\n  }\n  generatePassword = () => {\n    var password = generator.generate({\n      length: 10,\n      uppercase: false,\n    });\n    this.setState({\n      generated: true,\n      error: false,\n    });\n   setTimeout(() => {\n    this.setState({\n      generated:false\n    })\n   }, 3000);\n    this.handleChange(password);\n  };\n\n  handleChange = (value) => {\n    const { input } = this.props;\n    const { property_name } = input;\n    this.props.updateParentState(\"pw_changed\", true);\n    this.props.handleUpdate(property_name, value);\n  };\n  handleBlur = () => {\n    const { value } = this.props;\n    this.setState({\n      active: value,\n    });\n\n    this.setState({\n      error: !value,\n    });\n  };\n  handleFocus = () => {\n    this.setState({\n      active: true,\n      validation_error: false,\n      error: false,\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { validate, input, value, is_edit } = this.props;\n    const { type } = input;\n    if (nextProps.validate !== validate && !is_edit) {\n      this.handleBlur(type, value);\n    }\n  }\n  handleCopy = () => {\n    this.setState({\n      copied: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 2000);\n  };\n  render() {\n    const { input, value, is_edit } = this.props;\n    const { empty_text, label } = input;\n    const { active, error, generated, copied, show_password } = this.state;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        className={\n          active || value\n            ? \"password text__input--active flex__start\"\n            : \"password flex__start\"\n        }\n      >\n      \n        <section className='password__input'>\n        <input\n          placeholder={system_text[label]}\n          onChange={(e) => this.handleChange(e.target.value)}\n          type={show_password ? 'text':\"password\"}\n          value={value ? value : !value && is_edit ? \"********\" : \"\"}\n          autocomplete=\"new-password\"\n          onBlur={(e) => this.handleBlur()}\n          onFocus={(e) => this.handleFocus()}\n        />\n          <button\n          type='button'\n          className='flex__center'\n        onClick = {() => this.setState({show_password:!show_password})}\n        >{show_password ? <VisibilityOffOutlinedIcon />  :<VisibilityOutlinedIcon />}</button>\n        </section>\n        <section  className='password__actions flex__between'>\n        <CopyToClipboard text={value} onCopy={() => this.handleCopy()}>\n          <aside\n          style ={{\n            opacity:value ? 1 : 0.7,\n            pointerEvents:value ? 'all' : 'none'\n          }}\n          >\n          <BtnWithTooltip\n            svg={copied  ? <CheckCircleOutlineOutlinedIcon /> : <FileCopyOutlinedIcon />}\n            tooltip={system_text.COPY}\n          ></BtnWithTooltip >\n          </aside>\n        </CopyToClipboard>\n        <BtnWithTooltip\n          svg={generated  ?<CheckCircleOutlineOutlinedIcon /> : <LockOutlinedIcon />}\n          handleClick={this.generatePassword}\n          value={true}\n          tooltip={system_text.GENERATE}\n        />\n        </section>\n        {error ? (\n          <p className=\"text__input__error\">{system_text[empty_text]}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ global }) {\n  return { global };\n}\n\nexport default connect(mapStateToProps, actions)(PasswordInput);\n"]},"metadata":{},"sourceType":"module"}