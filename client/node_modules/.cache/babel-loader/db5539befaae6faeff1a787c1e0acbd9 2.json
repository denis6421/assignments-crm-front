{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/overview/parts/HorizontalChart.jsx\";\nimport React, { Component } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport { apiGetRequest } from '../../../tools/api';\n\nclass HorizontalChart extends Component {\n  constructor() {\n    super();\n\n    this.getData = async () => {\n      const type = this.state.type;\n      const api = 'employee/all';\n      const res = await apiGetRequest(api);\n\n      if (res.ok) {\n        let employees = res.result;\n        this.setState({\n          employees\n        });\n        this.generateData(employees, type);\n      }\n    };\n\n    this.generateData = (employees, type) => {\n      let labels = employees.map(m => m.name);\n      let data = employees.map(m => m.assignments_count[type]);\n      const graph_data = {\n        labels: labels,\n        datasets: [{\n          label: '',\n          backgroundColor: 'rgba(0, 145, 255, 0.5)',\n          borderColor: 'rgba(255,99,132,0)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: data\n        }]\n      };\n      this.setState({\n        graph_data\n      });\n    };\n\n    this.state = {\n      type: 'pending'\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const options = {\n      legend: {\n        display: false\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            beginAtZero: false\n          },\n          gridLines: {\n            offsetGridLines: false\n          }\n        }],\n        yAxes: [{\n          stacked: true,\n          gridLines: {}\n        }]\n      }\n    };\n    const _this$state = this.state,\n          type = _this$state.type,\n          graph_data = _this$state.graph_data;\n    return React.createElement(\"div\", {\n      className: \"overview__section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      options: options,\n      data: graph_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default HorizontalChart;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/overview/parts/HorizontalChart.jsx"],"names":["React","Component","HorizontalBar","apiGetRequest","HorizontalChart","constructor","getData","type","state","api","res","ok","employees","result","setState","generateData","labels","map","m","name","data","assignments_count","graph_data","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","componentDidMount","render","options","legend","display","scales","xAxes","ticks","beginAtZero","gridLines","offsetGridLines","yAxes","stacked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACtCI,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,OATa,GASH,YAAY;AAAA,YACbC,IADa,GACL,KAAKC,KADA,CACbD,IADa;AAEpB,YAAME,GAAG,GAAG,cAAZ;AACA,YAAMC,GAAG,GAAI,MAAMP,aAAa,CAACM,GAAD,CAAhC;;AACA,UAAIC,GAAG,CAACC,EAAR,EAAW;AACT,YAAIC,SAAS,GAAGF,GAAG,CAACG,MAApB;AACA,aAAKC,QAAL,CAAc;AACZF,UAAAA;AADY,SAAd;AAGA,aAAKG,YAAL,CAAkBH,SAAlB,EAA6BL,IAA7B;AACD;AACF,KApBY;;AAAA,SAsBbQ,YAtBa,GAsBE,CAACH,SAAD,EAAYL,IAAZ,KAAqB;AAClC,UAAIS,MAAM,GAAGJ,SAAS,CAACK,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACC,IAArB,CAAb;AACA,UAAIC,IAAI,GAAGR,SAAS,CAACK,GAAV,CAAcC,CAAC,IAAIA,CAAC,CAACG,iBAAF,CAAoBd,IAApB,CAAnB,CAAX;AACA,YAAMe,UAAU,GAAG;AACjBN,QAAAA,MAAM,EAAEA,MADS;AAEjBO,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,EADT;AAEEC,UAAAA,eAAe,EAAE,wBAFnB;AAGEC,UAAAA,WAAW,EAAE,oBAHf;AAIEC,UAAAA,WAAW,EAAE,CAJf;AAKEC,UAAAA,oBAAoB,EAAE,sBALxB;AAMEC,UAAAA,gBAAgB,EAAE,oBANpB;AAOET,UAAAA,IAAI,EAACA;AAPP,SADQ;AAFO,OAAnB;AAcA,WAAKN,QAAL,CAAc;AACZQ,QAAAA;AADY,OAAd;AAMD,KA7CY;;AAEX,SAAKd,KAAL,GAAa;AACTD,MAAAA,IAAI,EAAC;AADI,KAAb;AAGD;;AACDuB,EAAAA,iBAAiB,GAAE;AACjB,SAAKxB,OAAL;AACD;;AAsCGyB,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAC;AACLC,QAAAA,OAAO,EAAC;AADH,OADO;AAIdC,MAAAA,MAAM,EAAE;AACJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,KAAK,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR,WADH;AAIJC,UAAAA,SAAS,EAAE;AACTC,YAAAA,eAAe,EAAE;AADR;AAJP,SAAD,CADH;AASJC,QAAAA,KAAK,EAAE,CAAC;AACJC,UAAAA,OAAO,EAAE,IADL;AAEJH,UAAAA,SAAS,EAAE;AAFP,SAAD;AATH;AAJM,KAAhB;AADO,wBAsBoB,KAAK/B,KAtBzB;AAAA,UAsBAD,IAtBA,eAsBAA,IAtBA;AAAA,UAsBMe,UAtBN,eAsBMA,UAtBN;AAuBP,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,aAAD;AACA,MAAA,OAAO,EAAIU,OADX;AAEA,MAAA,IAAI,EAAEV,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAOH;;AA7EmC;;AAgFxC,eAAelB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport {HorizontalBar} from 'react-chartjs-2';\nimport { apiGetRequest } from '../../../tools/api';\n\nclass HorizontalChart extends Component {\n  constructor(){\n    super()\n    this.state = {\n        type:'pending'\n    }\n  }\n  componentDidMount(){\n    this.getData()\n  }\n  getData = async () => {\n    const {type} = this.state\n    const api = 'employee/all'\n    const res  = await apiGetRequest(api)\n    if (res.ok){\n      let employees = res.result\n      this.setState({\n        employees\n      })\n      this.generateData(employees, type)\n    }\n  }\n\n  generateData = (employees, type) => {\n    let labels = employees.map(m => m.name)\n    let data = employees.map(m => m.assignments_count[type])\n    const graph_data = {\n      labels: labels,\n      datasets: [\n        {\n          label: '',\n          backgroundColor: 'rgba(0, 145, 255, 0.5)',\n          borderColor: 'rgba(255,99,132,0)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data:data\n        }\n      ]\n    };\n    this.setState({\n      graph_data\n    })\n\n\n    \n  }\n      render() {\n        const options = {\n          legend:{\n            display:false\n          },  \n          scales: {\n              xAxes: [{\n                  ticks: {\n                    beginAtZero: false\n                  },\n                  gridLines: {\n                    offsetGridLines: false\n                }\n              }],\n              yAxes: [{\n                  stacked: true,\n                  gridLines: {\n                   \n                }\n              }]\n          }\n      }\n        const {type, graph_data} = this.state\n        return (\n            <div className='overview__section'>\n            <HorizontalBar \n            options = {options}\n            data={graph_data} />\n          </div>\n        );\n    }\n}\n\nexport default HorizontalChart;"]},"metadata":{},"sourceType":"module"}