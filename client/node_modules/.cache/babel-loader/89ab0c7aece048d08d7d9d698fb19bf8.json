{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/permissions/PermissionsSettings.jsx\";\nimport React, { Component } from \"react\";\nimport { permissions_options } from \"./permissions_options\";\nimport SwitchComponent from \"../../../../parts/SwitchComponent\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport { SETTINGS_ROUTE, EMPLOYEE_DASHBOARD_SETTINGS } from \"../../../../tools/routes\";\nimport { Link } from 'react-router-dom';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nclass PermissionsSettings extends Component {\n  constructor() {\n    super();\n\n    this.update = async permission => {\n      const _this$props$user = this.props.user,\n            permissions = _this$props$user.permissions,\n            user = _this$props$user.user;\n      let old_permissions = [...permissions];\n      let updated_permissions = [...permissions];\n\n      if (updated_permissions.includes(permission)) {\n        updated_permissions = updated_permissions.filter(m => m !== permission);\n      } else {\n        updated_permissions = [...updated_permissions, permission];\n      }\n\n      const body = {\n        user: user._id,\n        permissions: updated_permissions\n      };\n      const api = \"account-settings/update\";\n      this.props.updateUserReducer('permissions', updated_permissions);\n      const res = await apiPostRequest(api, body);\n\n      if (!res.ok) {\n        this.props.updateUserReducer('permissions', old_permissions);\n      }\n    };\n\n    this.state = {\n      user_permissions: []\n    };\n  }\n\n  render() {\n    const _this$props$user2 = this.props.user,\n          permissions = _this$props$user2.permissions,\n          user = _this$props$user2.user;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      className: \"settings__permissions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"back__button flex__start\",\n      to: user.is_manager ? SETTINGS_ROUTE : EMPLOYEE_DASHBOARD_SETTINGS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(NavigateBeforeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), system_text.SETTINGS)), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, system_text.EMPLOYEE_PERMISSIONS), React.createElement(\"ul\", {\n      className: \"settings__permissions__list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, permissions_options.map((m, i) => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(SwitchComponent, {\n        key: i,\n        active_text: system_text[m.text],\n        inactive_text: system_text[m.text],\n        updateEmployee: this.update,\n        value: permissions.includes(m.code),\n        property_name: m.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  user,\n  global\n}) {\n  return {\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(PermissionsSettings));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/permissions/PermissionsSettings.jsx"],"names":["React","Component","permissions_options","SwitchComponent","connect","actions","withRouter","apiPostRequest","SETTINGS_ROUTE","EMPLOYEE_DASHBOARD_SETTINGS","Link","NavigateBeforeIcon","PermissionsSettings","constructor","update","permission","props","user","permissions","old_permissions","updated_permissions","includes","filter","m","body","_id","api","updateUserReducer","res","ok","state","user_permissions","render","system_text","global","is_manager","SETTINGS","EMPLOYEE_PERMISSIONS","map","i","text","code","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { permissions_options } from \"./permissions_options\";\nimport SwitchComponent from \"../../../../parts/SwitchComponent\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport { SETTINGS_ROUTE, EMPLOYEE_DASHBOARD_SETTINGS } from \"../../../../tools/routes\";\nimport {Link} from 'react-router-dom'\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nclass PermissionsSettings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user_permissions: [],\n    };\n  }\n  update = async (permission) => {\n    const { permissions, user } = this.props.user;\n    let old_permissions = [...permissions]\n    let updated_permissions = [...permissions]\n    if (updated_permissions.includes(permission)) {\n        updated_permissions = updated_permissions.filter((m) => m !== permission);\n    } else {\n        updated_permissions = [...updated_permissions, permission];\n    }\n    const body = {\n        user:user._id,\n        permissions:updated_permissions\n    }\n    const api = \"account-settings/update\";\n    this.props.updateUserReducer('permissions', updated_permissions)\n    const res = await apiPostRequest(api, body);\n    if(!res.ok){\n      this.props.updateUserReducer('permissions', old_permissions)\n    }\n  \n  };\n\n  render() {\n    const { permissions, user } = this.props.user;\n    const {system_text} =this.props.global\n    return (\n      <div className=\"settings__permissions\">\n        <header>\n        <Link\n        className='back__button flex__start'\n        to ={user.is_manager ? SETTINGS_ROUTE  :EMPLOYEE_DASHBOARD_SETTINGS}>\n          <NavigateBeforeIcon />{system_text.SETTINGS}\n        </Link>\n        </header>\n    <h2>{system_text.EMPLOYEE_PERMISSIONS}</h2>\n        <ul className=\"settings__permissions__list\">\n          {permissions_options.map((m, i) => {\n            return (\n              <li>\n                <SwitchComponent\n                  key={i}\n                  active_text={system_text[m.text]}\n                  inactive_text={system_text[m.text]}\n                  updateEmployee={this.update}\n                  value={\n                    permissions.includes(m.code)\n                  }\n                  property_name={m.code}\n                />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ user, global }) {\n  return { user, global };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, actions)(PermissionsSettings)\n);\n"]},"metadata":{},"sourceType":"module"}