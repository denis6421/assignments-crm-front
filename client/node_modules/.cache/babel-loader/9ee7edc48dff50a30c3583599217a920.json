{"ast":null,"code":"import _toConsumableArray from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{SET_DATA_TO_ASSIGNMENTS_REDUCER}from'./types';export var setDataToAssignmentsReducer=function setDataToAssignmentsReducer(name,value){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:SET_DATA_TO_ASSIGNMENTS_REDUCER,payload:{name:name,value:value}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};export var addAssignment=function addAssignment(assignment,list){return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var new_list,value,name;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:new_list=JSON.parse(JSON.stringify(list));new_list=[assignment].concat(_toConsumableArray(new_list));value=new_list;name='assignments_list';dispatch({type:SET_DATA_TO_ASSIGNMENTS_REDUCER,payload:{name:name,value:value}});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};export var removeAssignment=function removeAssignment(assignment,list){return(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var new_list,value,name;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:new_list=JSON.parse(JSON.stringify(list));new_list=new_list.filter(function(m){return m._id!==assignment._id;});value=new_list;name='assignments_list';dispatch({type:SET_DATA_TO_ASSIGNMENTS_REDUCER,payload:{name:name,value:value}});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());};export var updateAssignment=function updateAssignment(assignment,list){return(/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var new_list,index,value,name;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:new_list=list?JSON.parse(JSON.stringify(list)):[];index=new_list.findIndex(function(m){return m._id===assignment._id;});console.log(index);if(index>=0){new_list.splice(index,1,assignment);}value=new_list;name='assignments_list';dispatch({type:SET_DATA_TO_ASSIGNMENTS_REDUCER,payload:{name:name,value:value}});case 7:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}());};","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/actions/assignments_actions.js"],"names":["SET_DATA_TO_ASSIGNMENTS_REDUCER","setDataToAssignmentsReducer","name","value","dispatch","type","payload","addAssignment","assignment","list","new_list","JSON","parse","stringify","removeAssignment","filter","m","_id","updateAssignment","index","findIndex","console","log","splice"],"mappings":"ufACA,OACIA,+BADJ,KAEO,SAFP,CAIA,MAAO,IAAMC,CAAAA,2BAA2B,CAAG,QAA9BA,CAAAA,2BAA8B,CAACC,IAAD,CAAOC,KAAP,kGAAiB,iBAAMC,QAAN,kHACxDA,QAAQ,CAAC,CACLC,IAAI,CAAEL,+BADD,CAELM,OAAO,CAAE,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAFJ,CAAD,CAAR,CADwD,sDAAjB,iEAApC,CAOP,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,CAAaC,IAAb,mGAAsB,kBAAML,QAAN,8IAC3CM,QAD2C,CAChCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CADgC,CAE/CC,QAAQ,EAAIF,UAAJ,4BAAmBE,QAAnB,EAAR,CACIP,KAH2C,CAGnCO,QAHmC,CAI3CR,IAJ2C,CAIpC,kBAJoC,CAK/CE,QAAQ,CAAC,CACLC,IAAI,CAAEL,+BADD,CAELM,OAAO,CAAE,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAFJ,CAAD,CAAR,CAL+C,wDAAtB,mEAAtB,CAWP,MAAO,IAAMW,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACN,UAAD,CAAaC,IAAb,mGAAsB,kBAAML,QAAN,8IAC9CM,QAD8C,CACnCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CADmC,CAElDC,QAAQ,CAAGA,QAAQ,CAACK,MAAT,CAAgB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUT,UAAU,CAACS,GAAzB,EAAjB,CAAX,CACId,KAH8C,CAGtCO,QAHsC,CAI9CR,IAJ8C,CAIvC,kBAJuC,CAKlDE,QAAQ,CAAC,CACLC,IAAI,CAAEL,+BADD,CAELM,OAAO,CAAE,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAFJ,CAAD,CAAR,CALkD,wDAAtB,mEAAzB,CAYP,MAAO,IAAMe,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACV,UAAD,CAAaC,IAAb,mGAAsB,kBAAML,QAAN,oJAE9CM,QAF8C,CAEnCD,IAAI,CAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAH,CAAsC,EAFP,CAG9CU,KAH8C,CAGtCT,QAAQ,CAACU,SAAT,CAAmB,SAAAJ,CAAC,QAAIA,CAAAA,CAAC,CAACC,GAAF,GAAUT,UAAU,CAACS,GAAzB,EAApB,CAHsC,CAI9CI,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAEJ,GAAIA,KAAK,EAAI,CAAb,CAAgB,CACZT,QAAQ,CAACa,MAAT,CAAgBJ,KAAhB,CAAuB,CAAvB,CAA0BX,UAA1B,EACH,CACGL,KAT8C,CAStCO,QATsC,CAU9CR,IAV8C,CAUvC,kBAVuC,CAWlDE,QAAQ,CAAC,CACLC,IAAI,CAAEL,+BADD,CAELM,OAAO,CAAE,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAFJ,CAAD,CAAR,CAXkD,wDAAtB,mEAAzB","sourcesContent":["\nimport {\n    SET_DATA_TO_ASSIGNMENTS_REDUCER\n} from './types'\n\nexport const setDataToAssignmentsReducer = (name, value) => async dispatch => {\n    dispatch({\n        type: SET_DATA_TO_ASSIGNMENTS_REDUCER,\n        payload: { name, value }\n    })\n}\n\nexport const addAssignment = (assignment, list) => async dispatch => {\n    let new_list = JSON.parse(JSON.stringify(list))\n    new_list = [assignment, ...new_list]\n    let value = new_list\n    let name = 'assignments_list'\n    dispatch({\n        type: SET_DATA_TO_ASSIGNMENTS_REDUCER,\n        payload: { name, value }\n    })\n}\n\nexport const removeAssignment = (assignment, list) => async dispatch => {\n    let new_list = JSON.parse(JSON.stringify(list))\n    new_list = new_list.filter(m => m._id !== assignment._id)\n    let value = new_list\n    let name = 'assignments_list'\n    dispatch({\n        type: SET_DATA_TO_ASSIGNMENTS_REDUCER,\n        payload: { name, value }\n    })\n}\n\n\nexport const updateAssignment = (assignment, list) => async dispatch => {\n   \n    let new_list = list ? JSON.parse(JSON.stringify(list)) : []\n    let index = new_list.findIndex(m => m._id === assignment._id)\n        console.log(index)\n  \n    if (index >= 0) {\n        new_list.splice(index, 1, assignment)\n    }\n    let value = new_list\n    let name = 'assignments_list'\n    dispatch({\n        type: SET_DATA_TO_ASSIGNMENTS_REDUCER,\n        payload: { name, value }\n    })\n}\n"]},"metadata":{},"sourceType":"module"}