{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/employee-assignments/EmployeeTodoList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport EmployeeAssignment from \"./EmployeeAssignment\";\nimport AssignmentLoader from \"../../assignments/parts/AssignmentLoader\";\nimport { hasPermission } from \"../../../functions/permission_functions\";\nimport { CREATE_ASSIGNMENTS } from \"../../settings/categories/permissions/Permissions_keys\";\nimport { filterEmployeeAssignments } from \"../../../functions/employe_assignments_functions\";\nimport NoData from \"../../../parts/NoData\";\nimport LibraryAddOutlinedIcon from \"@material-ui/icons/LibraryAddOutlined\";\nimport BtnWithTooltip from \"../../../parts/BtnWithTooltip\";\nimport SortIcon from \"@material-ui/icons/Sort\";\n\nconst getAssignmentsAmount = (arr, value) => {\n  if (arr && arr.length > 0) {\n    let num = 0;\n    arr.forEach(element => {\n      if (element.status === value) {\n        num++;\n      }\n    });\n    return num;\n  } else {\n    return 0;\n  }\n};\n\nclass EmployeeTodoList extends Component {\n  constructor() {\n    super();\n\n    this.handleFilter = val => {\n      this.setState({\n        status: val\n      });\n    };\n\n    this.toggleAssignmentsList = val => {\n      this.setState({\n        show_assignments: val\n      });\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.openCreateAssignment = () => {\n      this.props.handleAssignment(true, true);\n    };\n\n    this.state = {\n      status: \"pending\"\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        page_loaded: true\n      });\n    }, 20);\n  }\n\n  componentWillUnmount() {\n    this.toggleAssignmentsList(false);\n  }\n\n  render() {\n    const _this$props = this.props,\n          employee = _this$props.employee,\n          assignments_loaded = _this$props.assignments_loaded;\n    const _this$props$user = this.props.user,\n          user = _this$props$user.user,\n          permissions = _this$props$user.permissions;\n    const _this$state = this.state,\n          status = _this$state.status,\n          page_loaded = _this$state.page_loaded;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      style: {\n        opacity: page_loaded ? 1 : 0\n      },\n      className: \"employee__page__assignments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sticky__top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"employee__page__assignments__header flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, hasPermission(user, permissions, CREATE_ASSIGNMENTS) ? React.createElement(BtnWithTooltip, {\n      svg: React.createElement(LibraryAddOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      handleClick: () => this.props.handleAssignment(true),\n      tooltip: system_text.CREATE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }) : \"\"), React.createElement(\"ul\", {\n      className: \"flex__start\",\n      id: \"employee__page__assignments__actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, system_text.ASSIGNMENT_STATUS_ARR.map((m, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        className: \"flex__center\",\n        id: status === m.value ? \"employee__page__assignments__actions--active\" : \"\",\n        onClick: () => this.handleFilter(m.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, m.img, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", m.text), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"(\", getAssignmentsAmount(employee.assignments, m.value), \")\"));\n    })), filterEmployeeAssignments(employee.assignments, status) ? React.createElement(\"section\", {\n      id: \"employee__assignments__titles\",\n      className: \"flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, system_text.EMPLOYEE_ASSIGNMENTS_TITLES.map((m, i) => {\n      return React.createElement(\"div\", {\n        className: \"flex__start\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, m.name), m.value === 'deadline' ? React.createElement(SortIcon, {\n        onClick: () => this.props.sort(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }) : '');\n    })) : null), React.createElement(\"ul\", {\n      className: \"flex__start\",\n      id: \"employee__assignments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, !assignments_loaded ? React.createElement(AssignmentLoader, {\n      arr: [...Array(3).keys()],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }) : assignments_loaded && !filterEmployeeAssignments(employee.assignments, status) ? React.createElement(NoData, {\n      create: this.openCreateAssignment,\n      text: system_text.NO_ASSIGNMENTS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : filterEmployeeAssignments(employee.assignments, status).map(m => {\n      return React.createElement(EmployeeAssignment, {\n        key: m._id,\n        m: m,\n        createAndUpdateAssignment: this.props.createAndUpdateAssignment,\n        handleAssignment: this.props.handleAssignment,\n        handleDelete: this.props.handleDelete,\n        key: m._id,\n        handleAssignmentComments: this.props.handleAssignmentComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  assignments,\n  user,\n  global\n}) {\n  return {\n    employees,\n    assignments,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeTodoList));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/employee-assignments/EmployeeTodoList.jsx"],"names":["React","Component","connect","actions","withRouter","EmployeeAssignment","AssignmentLoader","hasPermission","CREATE_ASSIGNMENTS","filterEmployeeAssignments","NoData","LibraryAddOutlinedIcon","BtnWithTooltip","SortIcon","getAssignmentsAmount","arr","value","length","num","forEach","element","status","EmployeeTodoList","constructor","handleFilter","val","setState","toggleAssignmentsList","show_assignments","updateState","name","openCreateAssignment","props","handleAssignment","state","componentDidMount","setTimeout","page_loaded","componentWillUnmount","render","employee","assignments_loaded","user","permissions","system_text","global","opacity","CREATE","ASSIGNMENT_STATUS_ARR","map","m","i","img","text","assignments","EMPLOYEE_ASSIGNMENTS_TITLES","sort","Array","keys","NO_ASSIGNMENTS","_id","createAndUpdateAssignment","handleDelete","handleAssignmentComments","mapStateToProps","employees"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport EmployeeAssignment from \"./EmployeeAssignment\";\nimport AssignmentLoader from \"../../assignments/parts/AssignmentLoader\";\nimport { hasPermission } from \"../../../functions/permission_functions\";\nimport { CREATE_ASSIGNMENTS } from \"../../settings/categories/permissions/Permissions_keys\";\nimport { filterEmployeeAssignments } from \"../../../functions/employe_assignments_functions\";\nimport NoData from \"../../../parts/NoData\";\nimport LibraryAddOutlinedIcon from \"@material-ui/icons/LibraryAddOutlined\";\nimport BtnWithTooltip from \"../../../parts/BtnWithTooltip\";\nimport SortIcon from \"@material-ui/icons/Sort\";\n\nconst getAssignmentsAmount = (arr, value) => {\n  if (arr && arr.length > 0) {\n    let num = 0;\n    arr.forEach((element) => {\n      if (element.status === value) {\n        num++;\n      }\n    });\n    return num;\n  } else {\n    return 0;\n  }\n};\n\nclass EmployeeTodoList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      status: \"pending\",\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        page_loaded: true,\n      });\n    }, 20);\n  }\n  handleFilter = (val) => {\n    this.setState({\n      status: val,\n    });\n  };\n  componentWillUnmount() {\n    this.toggleAssignmentsList(false);\n  }\n  toggleAssignmentsList = (val) => {\n    this.setState({\n      show_assignments: val,\n    });\n  };\n\n  updateState = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n  openCreateAssignment = () => {\n    this.props.handleAssignment(true, true);\n  };\n  render() {\n    const { employee, assignments_loaded } = this.props;\n    const { user, permissions } = this.props.user;\n    const { status, page_loaded } = this.state;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        style={{\n          opacity: page_loaded ? 1 : 0,\n        }}\n        className=\"employee__page__assignments\"\n      >\n        <div className=\"sticky__top\">\n          <header className=\"employee__page__assignments__header flex__start\">\n            {hasPermission(user, permissions, CREATE_ASSIGNMENTS) ? (\n              <BtnWithTooltip\n                svg={<LibraryAddOutlinedIcon />}\n                handleClick={() => this.props.handleAssignment(true)}\n                tooltip={system_text.CREATE}\n              />\n            ) : (\n              \"\"\n            )}\n          </header>\n          <ul className=\"flex__start\" id=\"employee__page__assignments__actions\">\n            {system_text.ASSIGNMENT_STATUS_ARR.map((m, i) => {\n              return (\n                <li\n                  key={i}\n                  className=\"flex__center\"\n                  id={\n                    status === m.value\n                      ? \"employee__page__assignments__actions--active\"\n                      : \"\"\n                  }\n                  onClick={() => this.handleFilter(m.value)}\n                >\n                  {m.img}\n                  <h3> {m.text}</h3>\n                  <h5>\n                    ({getAssignmentsAmount(employee.assignments, m.value)})\n                  </h5>\n                </li>\n              );\n            })}\n          </ul>\n          {filterEmployeeAssignments(employee.assignments, status) ? (\n            <section id=\"employee__assignments__titles\" className=\"flex__start\">\n              {system_text.EMPLOYEE_ASSIGNMENTS_TITLES.map((m, i) => {\n                return (\n                  <div \n                  className='flex__start'\n                key={i}>\n                    <h3>{m.name}</h3>\n                   {m.value === 'deadline'  ? <SortIcon\n                     onClick={() => this.props.sort()} \n                   /> : ''}\n                  </div>\n                );\n              })}\n            </section>\n          ) : null}\n        </div>\n\n        <ul className=\"flex__start\" id=\"employee__assignments\">\n          {!assignments_loaded ? (\n            <AssignmentLoader arr={[...Array(3).keys()]} />\n          ) : assignments_loaded &&\n            !filterEmployeeAssignments(employee.assignments, status) ? (\n            <NoData\n              create={this.openCreateAssignment}\n              text={system_text.NO_ASSIGNMENTS}\n            />\n          ) : (\n            filterEmployeeAssignments(employee.assignments, status).map((m) => {\n              return (\n                <EmployeeAssignment\n                  key={m._id}\n                  m={m}\n                  createAndUpdateAssignment={\n                    this.props.createAndUpdateAssignment\n                  }\n                  handleAssignment={this.props.handleAssignment}\n                  handleDelete={this.props.handleDelete}\n                  key={m._id}\n                  handleAssignmentComments={this.props.handleAssignmentComments}\n                />\n              );\n            })\n          )}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, assignments, user, global }) {\n  return { employees, assignments, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeTodoList));\n"]},"metadata":{},"sourceType":"module"}