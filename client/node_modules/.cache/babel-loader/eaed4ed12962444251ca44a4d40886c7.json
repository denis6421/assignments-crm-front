{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/EmployeePage.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport EmployeeMenu from \"./parts/EmployeeMenu\";\nimport EmploeeAssignments from \"./employee-assignments/EmploeeAssignments\";\nimport { apiGetRequest, apiPostRequest } from \"../../tools/api\";\nimport EmployeeProfile from \"./employee-assignments/EmployeeProfile\";\nimport HandleProfile from \"../employees/parts/HandleProfile\";\n\nclass EmployeePage extends Component {\n  constructor() {\n    super();\n\n    this.changeSection = profile => {\n      this.setState({\n        profile\n      });\n    };\n\n    this.getEmployee = async id => {\n      const api = \"employee/get-by-id?id=\".concat(id);\n      const res = await apiGetRequest(api);\n\n      if (res.ok) {\n        setTimeout(() => {\n          this.setState({\n            employee: res.result,\n            page_loaded: true\n          });\n        }, 100);\n      }\n    };\n\n    this.updateEmployee = async (employee, pw_chaned) => {\n      if (pw_chaned) this.resetEmployeePassword(employee);\n      const api = \"employee/update\";\n      const res = await apiPostRequest(api, employee);\n\n      if (res.ok) {\n        this.setState({\n          employee: res.result\n        });\n      }\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toggleHandleEmployee = active => {\n      this.setState({\n        handle_employee: active\n      });\n    };\n\n    this.resetEmployeePassword = async profile => {\n      const api = \"employee/password-reset\";\n      const body = {\n        _id: profile._id,\n        password: profile.password\n      };\n      await apiPostRequest(api, body);\n    };\n\n    this.state = {\n      active_section: \"assignments\",\n      assignments: []\n    };\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    await this.getEmployee(id);\n  }\n\n  render() {\n    const _this$state = this.state,\n          employee = _this$state.employee,\n          active_section = _this$state.active_section,\n          page_loaded = _this$state.page_loaded,\n          handle_employee = _this$state.handle_employee,\n          profile = _this$state.profile;\n    const user = this.props.user.user;\n    const system_text = this.props.global.system_text;\n    return page_loaded && employee ? React.createElement(\"div\", {\n      className: \"employee__page\",\n      id: !user.is_manager ? \"employee__page--employee\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, handle_employee ? React.createElement(HandleProfile, {\n      toggleHandleProfile: this.toggleHandleEmployee,\n      profile_to_edit: employee,\n      returnEmployee: this.updateEmployee,\n      save: this.updateEmployee,\n      resetPassword: this.resetEmployeePassword,\n      edit_text: system_text.EDIT_EMPLOYEE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : \"\", user.is_manager ? React.createElement(EmployeeMenu, {\n      system_text: system_text,\n      changeSection: this.changeSection,\n      active_section: active_section,\n      active: true,\n      employee: employee ? employee : {},\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : \"\", React.createElement(EmploeeAssignments, {\n      hide_page: profile,\n      employee: employee,\n      updateEmployee: this.updateEmployee,\n      updateParentState: this.updateState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), profile ? React.createElement(EmployeeProfile, {\n      show_close_btn: true,\n      toggleHandleEmployee: this.toggleHandleEmployee,\n      employee: employee ? employee : {},\n      save: this.updateEmployee,\n      changeSection: this.changeSection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }) : '') : \"\";\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  navbar,\n  assignments,\n  user,\n  global\n}) {\n  return {\n    employees,\n    navbar,\n    assignments,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeePage));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/EmployeePage.jsx"],"names":["React","Component","withRouter","connect","actions","EmployeeMenu","EmploeeAssignments","apiGetRequest","apiPostRequest","EmployeeProfile","HandleProfile","EmployeePage","constructor","changeSection","profile","setState","getEmployee","id","api","res","ok","setTimeout","employee","result","page_loaded","updateEmployee","pw_chaned","resetEmployeePassword","updateState","name","value","toggleHandleEmployee","active","handle_employee","body","_id","password","state","active_section","assignments","componentDidMount","props","match","params","render","user","system_text","global","is_manager","EDIT_EMPLOYEE","mapStateToProps","employees","navbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport EmployeeMenu from \"./parts/EmployeeMenu\";\nimport EmploeeAssignments from \"./employee-assignments/EmploeeAssignments\";\nimport { apiGetRequest, apiPostRequest } from \"../../tools/api\";\nimport EmployeeProfile from \"./employee-assignments/EmployeeProfile\";\nimport HandleProfile from \"../employees/parts/HandleProfile\";\n\nclass EmployeePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      active_section: \"assignments\",\n      assignments: [],\n    };\n  }\n\n  changeSection = (profile) => {\n    this.setState({\n      profile\n    });\n  };\n\n\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    await this.getEmployee(id);\n  }\n  getEmployee = async (id) => {\n    const api = `employee/get-by-id?id=${id}`;\n    const res = await apiGetRequest(api);\n    if (res.ok) {\n      setTimeout(() => {\n        this.setState({\n          employee: res.result,\n          page_loaded: true,\n        });\n      }, 100);\n    }\n  };\n\n  updateEmployee = async (employee, pw_chaned) => {\n    if (pw_chaned) this.resetEmployeePassword(employee);\n    const api = \"employee/update\";\n    const res = await apiPostRequest(api, employee);\n    if (res.ok) {\n      this.setState({\n        employee: res.result,\n      });\n    }\n  };\n\n  updateState = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  toggleHandleEmployee = (active) => {\n    this.setState({\n      handle_employee: active,\n    });\n  };\n\n  resetEmployeePassword = async (profile) => {\n    const api = \"employee/password-reset\";\n    const body = {\n      _id: profile._id,\n      password: profile.password,\n    };\n    await apiPostRequest(api, body);\n  };\n\n  render() {\n    const {\n      employee,\n      active_section,\n      page_loaded,\n      handle_employee,\n      profile\n    } = this.state;\n    const { user } = this.props.user;\n    const { system_text } = this.props.global;\n    return page_loaded && employee ? (\n      <div\n        className=\"employee__page\"\n        id={!user.is_manager ? \"employee__page--employee\" : \"\"}\n      >\n        {handle_employee ? (\n          <HandleProfile\n            toggleHandleProfile={this.toggleHandleEmployee}\n            profile_to_edit={employee}\n            returnEmployee={this.updateEmployee}\n            save={this.updateEmployee}\n            resetPassword={this.resetEmployeePassword}\n            edit_text={system_text.EDIT_EMPLOYEE}\n          />\n        ) : (\n          \"\"\n        )}\n        {user.is_manager ? (\n          <EmployeeMenu\n            system_text={system_text}\n            changeSection={this.changeSection}\n            active_section={active_section}\n            active={true}\n            employee={employee ? employee : {}}\n            user={user}\n          />\n        ) : (\n          \"\"\n        )}\n\n        <EmploeeAssignments\n          hide_page = {profile} \n          employee={employee}\n          updateEmployee={this.updateEmployee}\n          updateParentState={this.updateState}\n        />\n       {profile ?  <EmployeeProfile\n       show_close_btn = {true}\n          toggleHandleEmployee={this.toggleHandleEmployee}\n          employee={employee ? employee : {}}\n          save={this.updateEmployee}\n          changeSection = {this.changeSection}\n        />  : ''}\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, navbar, assignments, user, global }) {\n  return { employees, navbar, assignments, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeePage));\n"]},"metadata":{},"sourceType":"module"}