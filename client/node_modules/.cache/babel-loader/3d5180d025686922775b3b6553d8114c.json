{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/parts/SuccessPopup.jsx\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\n\nconst SuccessPopup = props => {\n  const msg = props.msg;\n  const system_text = props.global.system_text;\n  return React.createElement(\"div\", {\n    style: {\n      opacity: msg ? 1 : 0,\n      pointerEvents: msg ? 'all' : 'none'\n    },\n    className: \"popup__with__question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    onClick: () => props.close(),\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"popup__with__question__content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, msg), React.createElement(\"section\", {\n    className: \"popup__with__question__actions flex__center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    style: {\n      color: 'white',\n      background: '#0091ff'\n    },\n    onClick: () => props.close(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, system_text.CLOSE))));\n};\n\nfunction mapStateToProps({\n  assignments,\n  global\n}) {\n  return {\n    assignments,\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SuccessPopup);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/parts/SuccessPopup.jsx"],"names":["React","connect","actions","SuccessPopup","props","msg","system_text","global","opacity","pointerEvents","close","color","background","CLOSE","mapStateToProps","assignments"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;;AAGA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA,QACpBC,GADoB,GACbD,KADa,CACpBC,GADoB;AAAA,QAErBC,WAFqB,GAENF,KAAK,CAACG,MAFA,CAErBD,WAFqB;AAG5B,SACI;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,OAAO,EAAEH,GAAG,GAAG,CAAH,GAAO,CADhB;AAEHI,MAAAA,aAAa,EAACJ,GAAG,GAAG,KAAH,GAAW;AAFzB,KADX;AAKI,IAAA,SAAS,EAAC,uBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AACA,IAAA,OAAO,EAAE,MAAMD,KAAK,CAACM,KAAN,EADf;AAEA,IAAA,SAAS,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EASI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,GAAL,CADJ,EAEI;AAAS,IAAA,SAAS,EAAC,6CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,KAAK,EAAG;AACJM,MAAAA,KAAK,EAAC,OADF;AAEJC,MAAAA,UAAU,EAAC;AAFP,KADR;AAKI,IAAA,OAAO,EAAE,MAAMR,KAAK,CAACM,KAAN,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMFJ,WAAW,CAACO,KANV,CADJ,CAFJ,CATJ,CADJ;AAwBH,CA3BD;;AA4BA,SAASC,eAAT,CAAyB;AAAEC,EAAAA,WAAF;AAAeR,EAAAA;AAAf,CAAzB,EAAkD;AAC9C,SAAO;AAAEQ,IAAAA,WAAF;AAAeR,IAAAA;AAAf,GAAP;AACD;;AAED,eACEN,OAAO,CAACa,eAAD,EAAkBZ,OAAlB,CAAP,CAAkCC,YAAlC,CADF","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\n\n\nconst SuccessPopup = (props) => {\n    const { msg} = props\n    const {system_text} = props.global;\n    return (\n        <div\n            style={{\n                opacity: msg ? 1 : 0,\n                pointerEvents:msg ? 'all'  :'none'\n            }}\n            className='popup__with__question'>\n            <section\n            onClick={() => props.close()}\n            className=\"overlay\"></section>\n            <div className='popup__with__question__content'>\n                <h2>{msg}</h2>\n                <section className='popup__with__question__actions flex__center'>\n                    <button\n                    style ={{\n                        color:'white',\n                        background:'#0091ff'\n                    }}\n                        onClick={() => props.close()}\n                >{system_text.CLOSE}</button>\n                </section>\n            </div>\n        </div>\n    );\n}\nfunction mapStateToProps({ assignments, global }) {\n    return { assignments, global };\n  }\n  \n  export default (\n    connect(mapStateToProps, actions)(SuccessPopup)\n  );\n  "]},"metadata":{},"sourceType":"module"}