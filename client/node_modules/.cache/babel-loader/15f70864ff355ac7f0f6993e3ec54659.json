{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/profile/ProfileSettings.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport { apiGetRequest, apiPostRequest } from \"../../../../tools/api\";\nimport HandleProfile from \"../../../employees/parts/HandleProfile\";\nimport EmployeeProfile from \"../../../employee-page/employee-assignments/EmployeeProfile\";\nimport { SETTINGS_ROUTE, EMPLOYEE_DASHBOARD_SETTINGS } from \"../../../../tools/routes\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { Link } from \"react-router-dom\";\n\nclass ProfileSettings extends Component {\n  constructor() {\n    super();\n\n    this.getProfile = async () => {\n      const user = this.props.user.user;\n      let api = \"\";\n      if (user.is_manager) api = \"users/get-profile\";else api = \"employee/get-profile\";\n      const res = await apiGetRequest(api);\n\n      if (res.ok) {\n        this.setState({\n          profile: res.result\n        });\n      }\n    };\n\n    this.saveProfile = async (profile, pw_changed) => {\n      const user = this.props.user.user;\n      let api = \"\";\n      if (user.is_manager) api = \"users/update\";else api = \"employee/update\";\n      const res = await apiPostRequest(api, profile);\n\n      if (res.ok) {\n        this.props.updateUserReducer(\"user\", res.result);\n        this.setState({\n          profile\n        });\n      }\n\n      if (pw_changed) {\n        this.resetProfilePassword(profile);\n      }\n    };\n\n    this.resetProfilePassword = async profile => {\n      const user = this.props.user.user;\n      let api = \"\";\n      let body = {\n        password: profile.password\n      };\n\n      if (user.is_manager) {\n        api = \"users/reset-password\";\n      } else {\n        body[\"_id\"] = profile._id;\n        api = \"employee/reset-password\";\n      }\n\n      await apiPostRequest(api, body);\n    };\n\n    this.toggleHandleProfile = val => {\n      this.setState({\n        edit_profile: val\n      });\n    };\n\n    this.state = {\n      edit_profile: false\n    };\n  }\n\n  async componentDidMount() {\n    this.getProfile();\n  }\n\n  render() {\n    const _this$state = this.state,\n          profile = _this$state.profile,\n          edit_profile = _this$state.edit_profile;\n    const user = this.props.user.user;\n    const system_text = this.props.global.system_text;\n    return profile ? React.createElement(\"div\", {\n      className: \"settings__profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"back__button flex__start\",\n      to: user.is_manager ? SETTINGS_ROUTE : EMPLOYEE_DASHBOARD_SETTINGS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(NavigateBeforeIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), system_text.SETTINGS)), React.createElement(EmployeeProfile, {\n      employee: profile,\n      toggleHandleEmployee: this.toggleHandleProfile,\n      hide_status: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), edit_profile ? React.createElement(HandleProfile, {\n      profile_to_edit: profile,\n      save: this.saveProfile,\n      resetPassword: this.resetProfilePassword,\n      toggleHandleProfile: this.toggleHandleProfile,\n      edit_text: \"Edit profile\",\n      status_disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : null) : null;\n  }\n\n}\n\nfunction mapStateToProps({\n  user,\n  global\n}) {\n  return {\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(ProfileSettings));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/profile/ProfileSettings.jsx"],"names":["React","Component","connect","actions","withRouter","apiGetRequest","apiPostRequest","HandleProfile","EmployeeProfile","SETTINGS_ROUTE","EMPLOYEE_DASHBOARD_SETTINGS","NavigateBeforeIcon","Link","ProfileSettings","constructor","getProfile","user","props","api","is_manager","res","ok","setState","profile","result","saveProfile","pw_changed","updateUserReducer","resetProfilePassword","body","password","_id","toggleHandleProfile","val","edit_profile","state","componentDidMount","render","system_text","global","SETTINGS","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport { apiGetRequest, apiPostRequest } from \"../../../../tools/api\";\nimport HandleProfile from \"../../../employees/parts/HandleProfile\";\nimport EmployeeProfile from \"../../../employee-page/employee-assignments/EmployeeProfile\";\nimport {\n  SETTINGS_ROUTE,\n  EMPLOYEE_DASHBOARD_SETTINGS,\n} from \"../../../../tools/routes\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { Link } from \"react-router-dom\";\nclass ProfileSettings extends Component {\n  constructor() {\n    super();\n    this.state = {\n      edit_profile: false,\n    };\n  }\n\n  async componentDidMount() {\n    this.getProfile();\n  }\n  getProfile = async () => {\n    const { user } = this.props.user;\n    let api = \"\";\n    if (user.is_manager) api = \"users/get-profile\";\n    else api = \"employee/get-profile\";\n    const res = await apiGetRequest(api);\n    if (res.ok) {\n      this.setState({ profile: res.result });\n    }\n  };\n  saveProfile = async (profile, pw_changed) => {\n    const { user } = this.props.user;\n    let api = \"\";\n    if (user.is_manager) api = \"users/update\";\n    else api = \"employee/update\";\n    const res = await apiPostRequest(api, profile);\n    if (res.ok) {\n   \n      this.props.updateUserReducer(\"user\", res.result);\n      this.setState({\n        profile,\n      });\n    }\n    if (pw_changed) {\n      this.resetProfilePassword(profile);\n    }\n  };\n\n  resetProfilePassword = async (profile) => {\n    const { user } = this.props.user;\n    let api = \"\";\n    let body = {\n      password: profile.password,\n    };\n    if (user.is_manager) {\n      api = \"users/reset-password\";\n    } else {\n      body[\"_id\"] = profile._id;\n      api = \"employee/reset-password\";\n    }\n    await apiPostRequest(api, body);\n  };\n  toggleHandleProfile = (val) => {\n    this.setState({\n      edit_profile: val,\n    });\n  };\n  render() {\n    const { profile, edit_profile } = this.state;\n    const { user } = this.props.user;\n    const { system_text } = this.props.global;\n    return profile ? (\n      <div className=\"settings__profile\">\n        <header>\n          <Link\n            className=\"back__button flex__start\"\n            to={user.is_manager ? SETTINGS_ROUTE : EMPLOYEE_DASHBOARD_SETTINGS}\n          >\n            <NavigateBeforeIcon />\n            {system_text.SETTINGS}\n          </Link>\n        </header>\n        <EmployeeProfile\n          employee={profile}\n          toggleHandleEmployee={this.toggleHandleProfile}\n          hide_status={true}\n        />\n        {edit_profile ? (\n          <HandleProfile\n            profile_to_edit={profile}\n            save={this.saveProfile}\n            resetPassword={this.resetProfilePassword}\n            toggleHandleProfile={this.toggleHandleProfile}\n            edit_text={\"Edit profile\"}\n            status_disabled={true}\n          />\n        ) : null}\n      </div>\n    ) : null;\n  }\n}\n\nfunction mapStateToProps({ user, global }) {\n  return { user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(ProfileSettings));\n"]},"metadata":{},"sourceType":"module"}