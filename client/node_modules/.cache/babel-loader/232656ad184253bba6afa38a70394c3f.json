{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/navbar/Navbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SmallPopup from \"../../parts/SmallPopup\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { LOGIN_ROUTE, SETTINGS_ROUTE } from \"../../tools/routes\";\nimport { removeCookie } from \"../../tools/cookie\";\nimport { AUTH_TOKEN } from \"../../tools/keys\";\nimport ExitToAppSharpIcon from \"@material-ui/icons/ExitToAppSharp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst isActive = (url, value) => {\n  if (url.indexOf(value) > -1) return true;\n  return false;\n};\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.logout = () => {\n      removeCookie(AUTH_TOKEN);\n      this.props.history.push(LOGIN_ROUTE);\n      window.location.reload();\n    };\n\n    this.onLoad = () => {\n      this.setState({\n        img_loaded: true\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextPros) {\n    this.setState({\n      mobile_menu: false\n    });\n    let url = nextPros.location.pathname;\n    this.setState({\n      url\n    });\n  }\n\n  componentDidMount() {\n    let url = window.location.pathname;\n    this.setState({\n      url,\n      page_loaded: true\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          url = _this$state.url,\n          page_loaded = _this$state.page_loaded,\n          img_loaded = _this$state.img_loaded,\n          mobile_menu = _this$state.mobile_menu;\n    const user = this.props.user.user;\n    const navigations = this.props.navigations;\n    const system_text = this.props.global.system_text;\n    const style = {\n      left: \"110%\",\n      top: \"50%\",\n      transform: \"translate(0, -50%)\"\n    };\n    return page_loaded ? React.createElement(\"nav\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      onClick: () => this.setState({\n        mobile_menu: !mobile_menu\n      }),\n      className: \"mobile__hamburger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"figure\", {\n      className: \"employee__img navbar__user__avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, user && user.avatar ? React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: user.avatar,\n      style: {\n        opacity: img_loaded ? 1 : 0,\n        transition: \"0.2s all\"\n      },\n      onLoad: () => this.onLoad(),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), !img_loaded ? React.createElement(\"aside\", {\n      className: \"avatar__loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }) : \"\") : React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      id: mobile_menu ? \"navbar__list--active\" : \"\",\n      className: \"navbar__list flex__column page__flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      className: \"navbar__list__mobile__placeholder\",\n      style: {\n        display: 'none'\n      },\n      onClick: () => this.setState({\n        mobile_menu: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), navigations && navigations.length > 0 ? navigations.map((m, i) => {\n      return React.createElement(Link, {\n        id: isActive(url, m.value) ? \"navbar__list__link--active\" : \"\",\n        className: \"navbar__list__link flex__center\",\n        key: i,\n        to: m.param ? m.url.replace(m.param, user._id) : m.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, m.img, React.createElement(SmallPopup, {\n        arrow_class: \"arrow-left\",\n        style: style,\n        text: system_text[m.text],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }));\n    }) : \"\"), React.createElement(\"button\", {\n      style: {\n        background: \"transparent\",\n        border: \"0px\"\n      },\n      className: \"navbar__list__link navbar__logout__link\",\n      onClick: () => this.logout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(SmallPopup, {\n      arrow_class: \"arrow-left\",\n      style: style,\n      text: system_text.LOGOUT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(ExitToAppSharpIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))) : \"\";\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  navbar,\n  user,\n  global\n}) {\n  return {\n    employees,\n    navbar,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(Navbar));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/navbar/Navbar.jsx"],"names":["React","Component","Link","withRouter","SmallPopup","connect","actions","LOGIN_ROUTE","SETTINGS_ROUTE","removeCookie","AUTH_TOKEN","ExitToAppSharpIcon","PersonIcon","MenuIcon","isActive","url","value","indexOf","Navbar","constructor","logout","props","history","push","window","location","reload","onLoad","setState","img_loaded","state","componentWillReceiveProps","nextPros","mobile_menu","pathname","componentDidMount","page_loaded","render","user","navigations","system_text","global","style","left","top","transform","display","avatar","opacity","transition","length","map","m","i","param","replace","_id","img","text","background","border","LOGOUT","mapStateToProps","employees","navbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SmallPopup from \"../../parts/SmallPopup\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { LOGIN_ROUTE, SETTINGS_ROUTE } from \"../../tools/routes\";\nimport { removeCookie } from \"../../tools/cookie\";\nimport { AUTH_TOKEN } from \"../../tools/keys\";\nimport ExitToAppSharpIcon from \"@material-ui/icons/ExitToAppSharp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nconst isActive = (url, value) => {\n  if (url.indexOf(value) > -1) return true;\n  return false;\n};\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentWillReceiveProps(nextPros) {\n    this.setState({\n      mobile_menu:false\n    })\n    let url = nextPros.location.pathname;\n    this.setState({\n      url,\n    });\n  }\n  componentDidMount() {\n    let url = window.location.pathname;\n    this.setState({\n      url,\n      page_loaded: true,\n    });\n  }\n\n  logout = () => {\n    removeCookie(AUTH_TOKEN);\n    this.props.history.push(LOGIN_ROUTE);\n    window.location.reload();\n  };\n  onLoad = () => {\n    this.setState({\n      img_loaded: true,\n    });\n  };\n  render() {\n    const { url, page_loaded, img_loaded, mobile_menu } = this.state;\n    const { user } = this.props.user;\n    const { navigations } = this.props;\n    const { system_text } = this.props.global;\n    const style = {\n      left: \"110%\",\n      top: \"50%\",\n      transform: \"translate(0, -50%)\",\n    };\n    return page_loaded ? (\n      <nav className=\"navbar\">\n        <div\n          style={{\n            display: \"none\",\n          }}\n          onClick={() =>\n            this.setState({\n              mobile_menu: !mobile_menu,\n            })\n          }\n          className=\"mobile__hamburger\"\n        >\n          <MenuIcon />\n        </div>\n        <figure className=\"employee__img navbar__user__avatar\">\n          {user && user.avatar ? (\n            <>\n              <img\n                src={user.avatar}\n                style={{\n                  opacity: img_loaded ? 1 : 0,\n                  transition: \"0.2s all\",\n                }}\n                onLoad={() => this.onLoad()}\n                alt=\"\"\n              />\n              {!img_loaded ? <aside className=\"avatar__loader\"></aside> : \"\"}\n            </>\n          ) : (\n            <PersonIcon />\n          )}\n        </figure>\n        <section\n          id={mobile_menu ? \"navbar__list--active\" : \"\"}\n          className=\"navbar__list flex__column page__flex\"\n        >\n          <aside className='navbar__list__mobile__placeholder'\n          style ={{\n            display:'none'\n          }}\n          onClick = {() => this.setState({\n            mobile_menu:false\n          })}\n          ></aside>\n          {navigations && navigations.length > 0\n            ? navigations.map((m, i) => {\n                return (\n                  <Link\n                   \n                    id={\n                      isActive(url, m.value) ? \"navbar__list__link--active\" : \"\"\n                    }\n                    className=\"navbar__list__link flex__center\"\n                    key={i}\n                    to={m.param ? m.url.replace(m.param, user._id) : m.url}\n                  >\n                    {m.img}\n                    <SmallPopup\n                      arrow_class=\"arrow-left\"\n                      style={style}\n                      text={system_text[m.text]}\n                    />\n                  </Link>\n                );\n              })\n            : \"\"}\n        </section>\n        <button\n          style={{\n            background: \"transparent\",\n            border: \"0px\",\n          }}\n          className=\"navbar__list__link navbar__logout__link\"\n          onClick={() => this.logout()}\n        >\n          <SmallPopup\n            arrow_class=\"arrow-left\"\n            style={style}\n            text={system_text.LOGOUT}\n          />\n          <ExitToAppSharpIcon />\n        </button>\n      </nav>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, navbar, user, global }) {\n  return { employees, navbar, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(Navbar));\n"]},"metadata":{},"sourceType":"module"}