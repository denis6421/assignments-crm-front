{"ast":null,"code":"import _defineProperty from \"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/employee-assignments/EmploeeAssignments.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { apiGetRequest, apiPostRequest } from \"../../../tools/api\";\nimport EmployeeTodoList from \"./EmployeeTodoList\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { EMPLOYEE_ROUTE, EMPLOYEE_ASSIGNMENT_ROUTE, EMPLOYEE_DASHBOARD_PAGE_ROUTE, EMPLOYEE_DASHBOARD_ASSIGNMENT_ROUTE } from \"../../../tools/routes\";\nimport EmployeeAssignmentPage from \"../employee-assignment-page/EmployeeAssignmentPage\";\nimport HandleAssignment from \"../../assignments/parts/HandleAssignment\";\nimport AssignmentComments from \"../parts/AssignmentComments\";\nimport PopupWithFunction from \"../../../parts/PopupWithFunction\";\n\nclass EmploeeAssignments extends Component {\n  constructor() {\n    super();\n\n    this.getAssignments = async () => {\n      const api = \"assignment\";\n      const res = await apiGetRequest(api);\n\n      if (res.ok) {\n        this.setState({\n          assignments_list: res.result,\n          assignments_loaded: true\n        });\n      }\n    };\n\n    this.handleAssignment = (action, new_assignment, assignment_to_edit) => {\n      this.setState({\n        handle_assignment: action,\n        new_assignment,\n        assignment_to_edit\n      });\n    };\n\n    this.createAndUpdateAssignment = async assignment => {\n      const employee = this.props.employee;\n      const api = \"employee_assignment\";\n      assignment[\"employee_id\"] = employee._id;\n      assignment[\"status\"] = assignment.status ? assignment.status : \"pending\";\n      console.log(assignment);\n      const res = await apiPostRequest(api, assignment);\n\n      if (res.ok) {\n        let index = employee.assignments.findIndex(m => m._id == assignment._id);\n        let updated_employee = JSON.parse(JSON.stringify(employee));\n\n        if (index >= 0) {\n          updated_employee.assignments.splice(index, 1, res.result);\n          this.props.updateGlobalReducer(\"success\", \"Assignment updated\");\n        } else {\n          updated_employee.assignments.unshift(res.result);\n          this.props.updateGlobalReducer(\"success\", \"Assignment created\");\n        }\n\n        this.props.updateParentState('employee', updated_employee);\n        const url = window.location.pathname;\n\n        if (url.indexOf('assignment') > -1) {\n          this.updateAssignmentInAssignmentPage(res.result);\n        }\n      }\n    };\n\n    this.handleDelete = assignment_to_remove => {\n      console.log(assignment_to_remove);\n      this.setState({\n        assignment_to_remove\n      });\n    };\n\n    this.handleAssignmentComments = assignment_comments => {\n      this.setState({\n        assignment_comments\n      });\n    };\n\n    this.remove = async () => {\n      const assignment_to_remove = this.state.assignment_to_remove;\n      const employee = this.props.employee;\n      this.setState({\n        delete_loading: true\n      });\n      assignment_to_remove[\"employee_id\"] = employee._id;\n      const api = \"employee_assignment/delete\";\n      const res = await apiPostRequest(api, assignment_to_remove);\n\n      if (res.ok) {\n        let updated = _objectSpread({}, employee);\n\n        let index = updated.assignments.findIndex(m => m._id == assignment_to_remove._id);\n\n        if (index >= 0) {\n          updated.assignments.splice(index, 1);\n          this.props.updateEmployee(updated);\n          this.close();\n        }\n\n        const url = window.location.pathname;\n\n        if (url.indexOf('assignment') === 0) {\n          this.props.history.push(EMPLOYEE_ROUTE.replace(':id', employee._id));\n        }\n      }\n\n      setTimeout(() => {\n        this.setState({\n          delete_loading: false\n        });\n      }, 300);\n    };\n\n    this.close = () => {\n      this.handleDelete();\n    };\n\n    this.updateAssignmentInAssignmentPage = page_assignment => {\n      this.setState({\n        page_assignment\n      });\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    this.getAssignments();\n  }\n\n  render() {\n    const _this$state = this.state,\n          assignments_list = _this$state.assignments_list,\n          assignments_loaded = _this$state.assignments_loaded,\n          assignment_comments = _this$state.assignment_comments,\n          handle_assignment = _this$state.handle_assignment,\n          new_assignment = _this$state.new_assignment,\n          assignment_to_edit = _this$state.assignment_to_edit,\n          assignment_to_remove = _this$state.assignment_to_remove,\n          page_assignment = _this$state.page_assignment,\n          delete_loading = _this$state.delete_loading;\n    const system_text = this.props.global.system_text;\n    const _this$props = this.props,\n          active_section = _this$props.active_section,\n          employee = _this$props.employee,\n          hide_page = _this$props.hide_page;\n    console.log(employee);\n    const user = this.props.user.user;\n    return React.createElement(\"div\", {\n      style: {\n        opacity: hide_page ? 0 : 1,\n        transition: '0.2s all'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(PopupWithFunction, {\n      text: system_text.REMOVE_ASSIGNMENT_QUESTION,\n      name: \"\".concat(assignment_to_remove ? assignment_to_remove.title : \"\", \"?\"),\n      active: assignment_to_remove,\n      submit: this.remove,\n      close: this.close,\n      submit_text: system_text.YES,\n      close_text: system_text.NO,\n      loading: delete_loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), assignment_comments ? React.createElement(AssignmentComments, {\n      updateAssignment: this.createAndUpdateAssignment,\n      assignment: assignment_comments,\n      updateParentState: this.updateState,\n      system_text: system_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }) : \"\", handle_assignment ? React.createElement(HandleAssignment, {\n      new_assignment: new_assignment,\n      edit: this.createAndUpdateAssignment,\n      create: this.createAndUpdateAssignment,\n      assignment_to_edit: assignment_to_edit,\n      toggleHandleAssignment: this.handleAssignment,\n      from_employee_page: true,\n      handleDelete: this.handleDelete,\n      assignments_list: assignments_list,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }) : null, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: user.is_manager ? EMPLOYEE_ROUTE : EMPLOYEE_DASHBOARD_PAGE_ROUTE,\n      render: () => React.createElement(EmployeeTodoList, {\n        handleAssignmentComments: this.handleAssignmentComments,\n        handleAssignment: this.handleAssignment,\n        updateEmployee: this.updateEmployee,\n        employee: employee ? employee : {},\n        assignments_loaded: assignments_loaded,\n        createAndUpdateAssignment: this.createAndUpdateAssignment,\n        handleDelete: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: user.is_manager ? EMPLOYEE_ASSIGNMENT_ROUTE : EMPLOYEE_DASHBOARD_ASSIGNMENT_ROUTE,\n      render: () => React.createElement(EmployeeAssignmentPage, {\n        employee: employee,\n        active_section: active_section,\n        handleAssignment: this.handleAssignment,\n        handleDelete: this.handleDelete,\n        assignment: page_assignment,\n        updateAssignmentInAssignmentPage: this.updateAssignmentInAssignmentPage,\n        createAndUpdateAssignment: this.createAndUpdateAssignment,\n        handleAssignmentComments: this.handleAssignmentComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  navbar,\n  assignments,\n  user,\n  global\n}) {\n  return {\n    employees,\n    navbar,\n    assignments,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmploeeAssignments));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/employee-assignments/EmploeeAssignments.jsx"],"names":["React","Component","connect","actions","apiGetRequest","apiPostRequest","EmployeeTodoList","withRouter","BrowserRouter","Router","Route","Switch","EMPLOYEE_ROUTE","EMPLOYEE_ASSIGNMENT_ROUTE","EMPLOYEE_DASHBOARD_PAGE_ROUTE","EMPLOYEE_DASHBOARD_ASSIGNMENT_ROUTE","EmployeeAssignmentPage","HandleAssignment","AssignmentComments","PopupWithFunction","EmploeeAssignments","constructor","getAssignments","api","res","ok","setState","assignments_list","result","assignments_loaded","handleAssignment","action","new_assignment","assignment_to_edit","handle_assignment","createAndUpdateAssignment","assignment","employee","props","_id","status","console","log","index","assignments","findIndex","m","updated_employee","JSON","parse","stringify","splice","updateGlobalReducer","unshift","updateParentState","url","window","location","pathname","indexOf","updateAssignmentInAssignmentPage","handleDelete","assignment_to_remove","handleAssignmentComments","assignment_comments","remove","state","delete_loading","updated","updateEmployee","close","history","push","replace","setTimeout","page_assignment","updateState","name","value","componentDidMount","render","system_text","global","active_section","hide_page","user","opacity","transition","REMOVE_ASSIGNMENT_QUESTION","title","YES","NO","is_manager","mapStateToProps","employees","navbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { apiGetRequest, apiPostRequest } from \"../../../tools/api\";\nimport EmployeeTodoList from \"./EmployeeTodoList\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  EMPLOYEE_ROUTE,\n  EMPLOYEE_ASSIGNMENT_ROUTE,\n  EMPLOYEE_DASHBOARD_PAGE_ROUTE,\n  EMPLOYEE_DASHBOARD_ASSIGNMENT_ROUTE,\n} from \"../../../tools/routes\";\nimport EmployeeAssignmentPage from \"../employee-assignment-page/EmployeeAssignmentPage\";\nimport HandleAssignment from \"../../assignments/parts/HandleAssignment\";\nimport AssignmentComments from \"../parts/AssignmentComments\";\nimport PopupWithFunction from \"../../../parts/PopupWithFunction\";\n\nclass EmploeeAssignments extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    \n    this.getAssignments();\n  }\n\n  getAssignments = async () => {\n    const api = \"assignment\";\n    const res = await apiGetRequest(api);\n    if (res.ok) {\n      this.setState({\n        assignments_list: res.result,\n        assignments_loaded: true,\n      });\n    }\n  };\n\n \n  handleAssignment = (action, new_assignment, assignment_to_edit) => {\n    this.setState({\n      handle_assignment: action,\n      new_assignment,\n      assignment_to_edit,\n    });\n  };\n\n  createAndUpdateAssignment = async (assignment) => {\n    const { employee } = this.props;\n    const api = `employee_assignment`;\n    assignment[\"employee_id\"] = employee._id;\n    assignment[\"status\"] = assignment.status ? assignment.status : \"pending\";\n    console.log(assignment);\n    const res = await apiPostRequest(api, assignment);\n    if (res.ok) {\n      let index = employee.assignments.findIndex(\n        (m) => m._id == assignment._id\n      );\n      let updated_employee = JSON.parse(JSON.stringify(employee))\n      if (index >= 0) {\n        updated_employee.assignments.splice(index, 1, res.result);\n        this.props.updateGlobalReducer(\"success\", \"Assignment updated\");\n      } else {\n        updated_employee.assignments.unshift(res.result);\n        this.props.updateGlobalReducer(\"success\", \"Assignment created\");\n      }\n      this.props.updateParentState('employee',updated_employee);\n      const url = window.location.pathname\n      if(url.indexOf('assignment') > -1){\n        this.updateAssignmentInAssignmentPage(res.result)\n    }\n    }\n  };\n\n  handleDelete = (assignment_to_remove) => {\n    console.log(assignment_to_remove);\n    this.setState({\n      assignment_to_remove,\n    });\n  };\n  handleAssignmentComments = (assignment_comments) => {\n    this.setState({\n      assignment_comments,\n    });\n  };\n\n  remove = async () => {\n    const { assignment_to_remove } = this.state;\n    const { employee } = this.props;\n    this.setState({\n      delete_loading:true\n    })\n    assignment_to_remove[\"employee_id\"] = employee._id;\n    const api = \"employee_assignment/delete\";\n    const res = await apiPostRequest(api, assignment_to_remove);\n    if (res.ok) {\n      let updated = { ...employee };\n      let index = updated.assignments.findIndex(\n        (m) => m._id == assignment_to_remove._id\n      );\n      if (index >= 0) {\n        updated.assignments.splice(index, 1);\n        this.props.updateEmployee(updated);\n        this.close();\n      }\n      const url = window.location.pathname\n      if(url.indexOf('assignment') === 0){\n          this.props.history.push(EMPLOYEE_ROUTE.replace(':id', employee._id))\n      }\n    }\n  setTimeout(() => {\n    this.setState({\n      delete_loading:false\n    })\n  }, 300);\n  };\n\n  close = () => {\n    this.handleDelete();\n  };\n\n\nupdateAssignmentInAssignmentPage = (page_assignment) => {\n    this.setState({\n        page_assignment\n    })\n}\nupdateState = (name, value) => {\n    this.setState({\n        [name]:value\n    })\n}\n\n  render() {\n    const {\n      assignments_list,\n      assignments_loaded,\n      assignment_comments,\n      handle_assignment,\n      new_assignment,\n      assignment_to_edit,\n      assignment_to_remove,\n      page_assignment,\n      delete_loading\n    } = this.state;\n    const {system_text} = this.props.global\n    const { active_section, employee, hide_page } = this.props;\n    console.log(employee)\n    const {user} = this.props.user\n    \n    return (\n      <div   \n      style ={{\n        opacity:hide_page ? 0 : 1,\n        transition:'0.2s all'\n      }}>\n      <PopupWithFunction\n          text={system_text.REMOVE_ASSIGNMENT_QUESTION}\n          name={`${assignment_to_remove ? assignment_to_remove.title : \"\"}?`}\n          active={assignment_to_remove}\n          submit={this.remove}\n          close={this.close}\n          submit_text={system_text.YES}\n          close_text={system_text.NO}\n          loading = {delete_loading}\n        />\n        {assignment_comments ? (\n          <AssignmentComments\n            updateAssignment={this.createAndUpdateAssignment}\n            assignment={assignment_comments}\n            updateParentState={this.updateState}\n            system_text = {system_text}\n          />\n        ) : (\n          \"\"\n        )}\n        {handle_assignment ? (\n          <HandleAssignment\n            new_assignment={new_assignment}\n            edit={this.createAndUpdateAssignment}\n            create={this.createAndUpdateAssignment}\n            assignment_to_edit={assignment_to_edit}\n            toggleHandleAssignment={this.handleAssignment}\n            from_employee_page={true}\n            handleDelete = {this.handleDelete}\n            assignments_list = {assignments_list}\n           \n          />\n        ) : null}\n\n        <Switch>\n          <Route\n            exact\n            path={user.is_manager ? EMPLOYEE_ROUTE   : EMPLOYEE_DASHBOARD_PAGE_ROUTE}\n            render={() => (\n              <EmployeeTodoList\n                handleAssignmentComments={this.handleAssignmentComments}\n                handleAssignment={this.handleAssignment}\n                updateEmployee={this.updateEmployee}\n                employee={employee ? employee : {}}\n                assignments_loaded={assignments_loaded}\n                createAndUpdateAssignment = {this.createAndUpdateAssignment}\n                handleDelete = {this.handleDelete}\n              />\n            )}\n          />\n          <Route\n           exact\n            path={user.is_manager ? EMPLOYEE_ASSIGNMENT_ROUTE : EMPLOYEE_DASHBOARD_ASSIGNMENT_ROUTE}\n            render={() => (\n              <EmployeeAssignmentPage\n                employee={employee}\n                active_section={active_section}\n                handleAssignment={this.handleAssignment}\n                handleDelete = {this.handleDelete}\n                assignment = {page_assignment}\n                updateAssignmentInAssignmentPage = {this.updateAssignmentInAssignmentPage}\n                createAndUpdateAssignment = {this.createAndUpdateAssignment}\n                handleAssignmentComments = {this.handleAssignmentComments}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, navbar, assignments, user, global }) {\n  return { employees, navbar, assignments, user , global};\n}\n\nexport default withRouter(\n  connect(mapStateToProps, actions)(EmploeeAssignments)\n);\n"]},"metadata":{},"sourceType":"module"}