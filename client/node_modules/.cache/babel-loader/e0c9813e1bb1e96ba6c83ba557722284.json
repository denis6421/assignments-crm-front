{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/system/SystemSettings.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport SelectBox from \"../../../../parts/SelectBox\";\nimport IsraelImg from \"../../../../images/flags/israel.svg\";\nimport UsaImg from \"../../../../images/flags/usa.svg\";\nconst languages = [{\n  name: \"English\",\n  value: \"english\",\n  img: UsaImg\n}, {\n  name: \"Hebrew\",\n  value: \"hebrew\",\n  img: IsraelImg\n}];\n\nclass SystemSettings extends Component {\n  constructor() {\n    super();\n\n    this.changeLanguage = async language => {\n      const user = this.props.user.user;\n      const api = \"account-settings/update\";\n      const body = {\n        user: user._id,\n        language: language.value\n      };\n\n      try {\n        await apiPostRequest(api, body).then(res => {\n          this.props.setSystemLanguage(\"language\", res.result.language);\n          this.setState({\n            selected: res.result.language\n          });\n        });\n      } catch (error) {}\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const language = this.props.global.language;\n    let selected = languages.filter(m => m.value === language)[0];\n    console.log(selected, language);\n    this.setState({\n      selected\n    });\n  }\n\n  render() {\n    const language = this.props.global.language;\n    const selected = this.state.selected;\n    return React.createElement(\"div\", {\n      className: \"settings__system\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(SelectBox, {\n      value: selected,\n      options: languages,\n      handleSelect: this.changeLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps({\n  user,\n  global\n}) {\n  return {\n    user,\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SystemSettings);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/system/SystemSettings.jsx"],"names":["React","Component","connect","actions","apiPostRequest","SelectBox","languages","name","value","img","UsaImg","IsraelImg","SystemSettings","constructor","changeLanguage","language","user","props","api","body","_id","then","res","setSystemLanguage","result","setState","selected","error","state","componentDidMount","global","filter","m","console","log","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAIA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE,SAA1B;AAAqCC,EAAAA,GAAG,EAACC;AAAzC,CADgB,EAEhB;AAAEH,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE,QAAzB;AAAmCC,EAAAA,GAAG,EAACE;AAAvC,CAFgB,CAAlB;;AAIA,MAAMC,cAAN,SAA6BX,SAA7B,CAAuC;AACrCY,EAAAA,WAAW,GAAG;AACZ;;AADY,SAadC,cAbc,GAaG,MAAOC,QAAP,IAAoB;AAAA,YAC3BC,IAD2B,GAClB,KAAKC,KAAL,CAAWD,IADO,CAC3BA,IAD2B;AAEnC,YAAME,GAAG,GAAG,yBAAZ;AACA,YAAMC,IAAI,GAAG;AACXH,QAAAA,IAAI,EAAEA,IAAI,CAACI,GADA;AAEXL,QAAAA,QAAQ,EAACA,QAAQ,CAACP;AAFP,OAAb;;AAIA,UAAI;AACF,cAAMJ,cAAc,CAACc,GAAD,EAAMC,IAAN,CAAd,CAA0BE,IAA1B,CAAgCC,GAAD,IAAS;AAC5C,eAAKL,KAAL,CAAWM,iBAAX,CAA6B,UAA7B,EAAyCD,GAAG,CAACE,MAAJ,CAAWT,QAApD;AACA,eAAKU,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAACJ,GAAG,CAACE,MAAJ,CAAWT;AADV,WAAd;AAGD,SALK,CAAN;AAMD,OAPD,CAOE,OAAOY,KAAP,EAAc,CAAE;AACnB,KA5Ba;;AAEZ,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AAAA,UACTd,QADS,GACI,KAAKE,KAAL,CAAWa,MADf,CACTf,QADS;AAEjB,QAAIW,QAAQ,GAAGpB,SAAS,CAACyB,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACxB,KAAF,KAAYO,QAAlC,EAA4C,CAA5C,CAAf;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAAsBX,QAAtB;AACA,SAAKU,QAAL,CAAc;AACVC,MAAAA;AADU,KAAd;AAGD;;AAiBDS,EAAAA,MAAM,GAAG;AAAA,UACEpB,QADF,GACc,KAAKE,KAAL,CAAWa,MADzB,CACEf,QADF;AAAA,UAEFW,QAFE,GAEU,KAAKE,KAFf,CAEFF,QAFE;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACA,MAAA,KAAK,EAAIA,QADT;AAEA,MAAA,OAAO,EAAEpB,SAFT;AAEoB,MAAA,YAAY,EAAE,KAAKQ,cAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAOD;;AAxCoC;;AA0CvC,SAASsB,eAAT,CAAyB;AAAEpB,EAAAA,IAAF;AAAQc,EAAAA;AAAR,CAAzB,EAA2C;AACzC,SAAO;AAAEd,IAAAA,IAAF;AAAQc,IAAAA;AAAR,GAAP;AACD;;AAED,eAAe5B,OAAO,CAACkC,eAAD,EAAkBjC,OAAlB,CAAP,CAAkCS,cAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport SelectBox from \"../../../../parts/SelectBox\";\nimport IsraelImg from '../../../../images/flags/israel.svg'\nimport UsaImg from '../../../../images/flags/usa.svg'\n\nconst languages = [\n  { name: \"English\", value: \"english\", img:UsaImg },\n  { name: \"Hebrew\", value: \"hebrew\", img:IsraelImg },\n];\nclass SystemSettings extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount(){\n    const { language } = this.props.global;\n    let selected = languages.filter(m => m.value === language)[0]\n    console.log(selected, language)\n    this.setState({\n        selected\n    })\n  }\n  changeLanguage = async (language) => {\n    const { user } = this.props.user;\n    const api = \"account-settings/update\";\n    const body = {\n      user: user._id,\n      language:language.value,\n    };\n    try {\n      await apiPostRequest(api, body).then((res) => {\n        this.props.setSystemLanguage(\"language\", res.result.language);\n        this.setState({\n            selected:res.result.language\n        })\n      });\n    } catch (error) {}\n  };\n  render() {\n      const {language} = this.props.global\n  const {selected} = this.state\n    return (\n      <div className=\"settings__system\">\n        <SelectBox\n        value = {selected}\n        options={languages} handleSelect={this.changeLanguage} />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ user, global }) {\n  return { user, global };\n}\n\nexport default connect(mapStateToProps, actions)(SystemSettings);\n"]},"metadata":{},"sourceType":"module"}