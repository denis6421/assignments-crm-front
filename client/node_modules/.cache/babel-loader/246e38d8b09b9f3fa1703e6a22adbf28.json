{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employees/parts/HandleProfile.jsx\";\nimport React, { Component } from \"react\";\nimport Upload from \"../../../parts/uploader/Uploader\";\nimport TextInput from \"../../../parts/inputs/TextInput\";\nimport inputs_data from \"./inputs-data\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport SwitchComponent from \"../../../parts/SwitchComponent\";\nimport PasswordInput from \"../../../parts/inputs/PasswordInput\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SubmitButtons from \"../../../parts/SubmitButtons\";\n\nclass HandleProfile extends Component {\n  constructor() {\n    super();\n\n    this.updateProfile = (name, value) => {\n      const profile = this.state.profile;\n      const updated_profile = JSON.parse(JSON.stringify(profile));\n      updated_profile[name] = value;\n      this.setState({\n        profile: updated_profile\n      });\n    };\n\n    this.close = () => {\n      this.setState({\n        profile: {},\n        loaded: false\n      });\n      setTimeout(() => {\n        this.props.toggleHandleProfile();\n      }, 400);\n    };\n\n    this.submitForm = e => {\n      const _this$state = this.state,\n            profile = _this$state.profile,\n            pw_changed = _this$state.pw_changed;\n      e.preventDefault();\n      this.setState({\n        validate: true\n      });\n      setTimeout(async () => {\n        this.setState({\n          validate: false\n        });\n        const errors = document.querySelectorAll(\".text__input__error\");\n\n        if (errors.length === 0) {\n          this.setState({\n            loading: true\n          });\n          await this.props.save(profile, pw_changed);\n          this.close();\n        }\n      }, 60);\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      profile: {\n        active: true\n      }\n    };\n  }\n\n  componentWillMount() {\n    const profile_to_edit = this.props.profile_to_edit;\n    setTimeout(() => {\n      this.setState({\n        loaded: true\n      });\n    }, 30);\n\n    if (profile_to_edit) {\n      this.setState({\n        profile: profile_to_edit,\n        is_edit: true\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loaded = _this$state2.loaded,\n          profile = _this$state2.profile,\n          validate = _this$state2.validate,\n          is_edit = _this$state2.is_edit,\n          loading = _this$state2.loading;\n    const _this$props = this.props,\n          edit_text = _this$props.edit_text,\n          create_text = _this$props.create_text,\n          status_disabled = _this$props.status_disabled;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      id: loaded ? \"employees__handle--active\" : \"\",\n      className: \"employees__handle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: e => this.submitForm(e),\n      className: \"employees__handle__form flex__column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: {\n        opacity: loaded ? 1 : 0\n      },\n      type: \"button\",\n      onClick: () => this.close(),\n      className: \"employees__handle__form__close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(CloseIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"header\", {\n      className: \"flex__between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, is_edit ? edit_text : create_text)), React.createElement(\"span\", {\n      style: {\n        alignItems: 'flex-start'\n      },\n      className: \"flex__between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      property_name: \"avatar\",\n      update: this.updateProfile,\n      value: profile.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), !status_disabled ? React.createElement(SwitchComponent, {\n      property_name: \"active\",\n      value: profile.active,\n      updateEmployee: this.updateProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }) : \"\"), React.createElement(\"div\", {\n      className: \"employees__handle__form__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, inputs_data.map(input => {\n      switch (input.type) {\n        case \"password\":\n          return React.createElement(PasswordInput, {\n            handleUpdate: this.updateProfile,\n            input: input,\n            validate: validate,\n            system_text: system_text,\n            value: profile[input.property_name],\n            is_edit: is_edit,\n            updateParentState: this.updateState,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          });\n\n        default:\n          return React.createElement(TextInput, {\n            handleUpdate: this.updateProfile,\n            input: input,\n            system_text: system_text,\n            validate: validate,\n            value: profile[input.property_name],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          });\n      }\n    })), React.createElement(SubmitButtons, {\n      close: this.close,\n      submit_text: system_text.SAVE,\n      close_text: system_text.CANCEL,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  user,\n  global\n}) {\n  return {\n    employees,\n    user,\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(HandleProfile);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employees/parts/HandleProfile.jsx"],"names":["React","Component","Upload","TextInput","inputs_data","connect","actions","SwitchComponent","PasswordInput","CloseIcon","SubmitButtons","HandleProfile","constructor","updateProfile","name","value","profile","state","updated_profile","JSON","parse","stringify","setState","close","loaded","setTimeout","props","toggleHandleProfile","submitForm","e","pw_changed","preventDefault","validate","errors","document","querySelectorAll","length","loading","save","updateState","active","componentWillMount","profile_to_edit","is_edit","render","edit_text","create_text","status_disabled","system_text","global","opacity","alignItems","avatar","map","input","type","property_name","SAVE","CANCEL","mapStateToProps","employees","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Upload from \"../../../parts/uploader/Uploader\";\nimport TextInput from \"../../../parts/inputs/TextInput\";\nimport inputs_data from \"./inputs-data\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport SwitchComponent from \"../../../parts/SwitchComponent\";\nimport PasswordInput from \"../../../parts/inputs/PasswordInput\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport SubmitButtons from \"../../../parts/SubmitButtons\";\n\nclass HandleProfile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      profile: { active: true },\n    };\n  }\n\n  componentWillMount() {\n    const { profile_to_edit } = this.props;\n    setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, 30);\n    if (profile_to_edit) {\n      this.setState({\n        profile: profile_to_edit,\n        is_edit: true,\n      });\n    }\n  }\n\n  updateProfile = (name, value) => {\n    const { profile } = this.state;\n    const updated_profile = JSON.parse(JSON.stringify(profile));\n    updated_profile[name] = value;\n    this.setState({\n      profile: updated_profile,\n    });\n  };\n\n  close = () => {\n    this.setState({\n      profile: {},\n      loaded: false,\n    });\n    setTimeout(() => {\n      this.props.toggleHandleProfile();\n    }, 400);\n  };\n\n  submitForm = (e) => {\n    const { profile, pw_changed } = this.state;\n    e.preventDefault();\n    this.setState({\n      validate: true,\n    });\n\n    setTimeout(async () => {\n      this.setState({\n        validate: false,\n      });\n      const errors = document.querySelectorAll(\".text__input__error\");\n      if (errors.length === 0) {\n        this.setState({\n          loading: true,\n        });\n        await this.props.save(profile, pw_changed);\n        this.close();\n      }\n    }, 60);\n  };\n  updateState = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n  render() {\n    const { loaded, profile, validate, is_edit, loading } = this.state;\n    const { edit_text, create_text, status_disabled } = this.props;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        id={loaded ? \"employees__handle--active\" : \"\"}\n        className=\"employees__handle\"\n      >\n        <section className=\"overlay\"></section>\n        <form\n          onSubmit={(e) => this.submitForm(e)}\n          className=\"employees__handle__form flex__column\"\n        >\n          <button\n            style={{\n              opacity: loaded ? 1 : 0,\n            }}\n            type=\"button\"\n            onClick={() => this.close()}\n            className=\"employees__handle__form__close\"\n          >\n            <CloseIcon />\n          </button>\n          <header className=\"flex__between\">\n            <h2>{is_edit ? edit_text : create_text}</h2>\n          </header>\n          <span \n          style ={{\n            alignItems:'flex-start'\n          }}\n          className=\"flex__between\">\n            <Upload\n              property_name=\"avatar\"\n              update={this.updateProfile}\n              value={profile.avatar}\n            />\n            {!status_disabled ? (\n              <SwitchComponent\n                property_name=\"active\"\n                value={profile.active}\n                updateEmployee={this.updateProfile}\n              />\n            ) : (\n              \"\"\n            )}\n          </span>\n          <div className=\"employees__handle__form__info\">\n            {inputs_data.map((input) => {\n              switch (input.type) {\n                case \"password\":\n                  return (\n                    <PasswordInput\n                      handleUpdate={this.updateProfile}\n                      input={input}\n                      validate={validate}\n                      system_text={system_text}\n                      value={profile[input.property_name]}\n                      is_edit={is_edit}\n                      updateParentState={this.updateState}\n                    />\n                  );\n\n                default:\n                  return (\n                    <TextInput\n                      handleUpdate={this.updateProfile}\n                      input={input}\n                      system_text={system_text}\n                      validate={validate}\n                      value={profile[input.property_name]}\n                    />\n                  );\n              }\n            })}\n          </div>\n          <SubmitButtons\n            close={this.close}\n            submit_text={system_text.SAVE}\n            close_text={system_text.CANCEL}\n            loading={loading}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, user, global }) {\n  return { employees, user, global };\n}\n\nexport default connect(mapStateToProps, actions)(HandleProfile);\n"]},"metadata":{},"sourceType":"module"}