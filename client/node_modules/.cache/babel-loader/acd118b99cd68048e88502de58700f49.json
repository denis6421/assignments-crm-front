{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/parts/inputs/PasswordInput.jsx\";\nimport React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport generator from \"generate-password\";\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport RotateLeftOutlinedIcon from \"@material-ui/icons/RotateLeftOutlined\";\nimport BtnWithTooltip from \"../../parts/BtnWithTooltip\";\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nclass PasswordInput extends Component {\n  constructor() {\n    super();\n\n    this.generatePassword = () => {\n      var password = generator.generate({\n        length: 10,\n        uppercase: false\n      });\n      this.setState({\n        generated: true,\n        error: false\n      });\n      setTimeout(() => {\n        this.setState({\n          generated: false\n        });\n      }, 3000);\n      this.handleChange(password);\n    };\n\n    this.handleChange = value => {\n      const input = this.props.input;\n      const property_name = input.property_name;\n      this.props.updateParentState(\"pw_changed\", true);\n      this.props.handleUpdate(property_name, value);\n    };\n\n    this.handleBlur = () => {\n      const value = this.props.value;\n      this.setState({\n        active: value\n      });\n      this.setState({\n        error: !value\n      });\n    };\n\n    this.handleFocus = () => {\n      this.setState({\n        active: true,\n        validation_error: false,\n        error: false\n      });\n    };\n\n    this.handleCopy = () => {\n      this.setState({\n        copied: true\n      });\n      setTimeout(() => {\n        this.setState({\n          copied: false\n        });\n      }, 2000);\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const is_edit = this.props.is_edit;\n\n    if (is_edit) {\n      this.setState({\n        active: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _this$props = this.props,\n          validate = _this$props.validate,\n          input = _this$props.input,\n          value = _this$props.value,\n          is_edit = _this$props.is_edit;\n    const type = input.type;\n\n    if (nextProps.validate !== validate && !is_edit) {\n      this.handleBlur(type, value);\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          input = _this$props2.input,\n          value = _this$props2.value,\n          is_edit = _this$props2.is_edit;\n    const empty_text = input.empty_text,\n          label = input.label;\n    const _this$state = this.state,\n          active = _this$state.active,\n          error = _this$state.error,\n          generated = _this$state.generated,\n          copied = _this$state.copied,\n          show_password = _this$state.show_password;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      className: active || value ? \"password text__input--active flex__start\" : \"password flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"password__input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: system_text[label],\n      onChange: e => this.handleChange(e.target.value),\n      type: show_password ? 'text' : \"password\",\n      value: value ? value : !value && is_edit ? \"********\" : \"\",\n      autocomplete: \"new-password\",\n      onBlur: e => this.handleBlur(),\n      onFocus: e => this.handleFocus(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"flex__center\",\n      onClick: () => this.setState({\n        show_password: !show_password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(VisibilityOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(\"section\", {\n      className: \"password__actions flex__between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: value,\n      onCopy: () => this.handleCopy(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      style: {\n        opacity: value ? 1 : 0.7,\n        pointerEvents: value ? 'all' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(BtnWithTooltip, {\n      svg: copied ? React.createElement(CheckCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }) : React.createElement(FileCopyOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      tooltip: system_text.COPY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), React.createElement(BtnWithTooltip, {\n      svg: generated ? React.createElement(CheckCircleOutlineOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : React.createElement(LockOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }),\n      handleClick: this.generatePassword,\n      value: true,\n      tooltip: system_text.GENERATE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), error ? React.createElement(\"p\", {\n      className: \"text__input__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, system_text[empty_text]) : \"\");\n  }\n\n}\n\nfunction mapStateToProps({\n  global\n}) {\n  return {\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(PasswordInput);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/parts/inputs/PasswordInput.jsx"],"names":["React","Component","CopyToClipboard","generator","VisibilityOutlinedIcon","connect","actions","FileCopyOutlinedIcon","RotateLeftOutlinedIcon","BtnWithTooltip","CheckCircleOutlineOutlinedIcon","LockOutlinedIcon","PasswordInput","constructor","generatePassword","password","generate","length","uppercase","setState","generated","error","setTimeout","handleChange","value","input","props","property_name","updateParentState","handleUpdate","handleBlur","active","handleFocus","validation_error","handleCopy","copied","state","componentDidMount","is_edit","componentWillReceiveProps","nextProps","validate","type","render","empty_text","label","show_password","system_text","global","e","target","opacity","pointerEvents","COPY","GENERATE","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport generator from \"generate-password\";\nimport VisibilityOutlinedIcon from '@material-ui/icons/VisibilityOutlined';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport RotateLeftOutlinedIcon from \"@material-ui/icons/RotateLeftOutlined\";\nimport BtnWithTooltip from \"../../parts/BtnWithTooltip\";\nimport CheckCircleOutlineOutlinedIcon from '@material-ui/icons/CheckCircleOutlineOutlined';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\nclass PasswordInput extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    const { is_edit } = this.props;\n    if (is_edit) {\n      this.setState({\n        active: true,\n      });\n    }\n  }\n  generatePassword = () => {\n    var password = generator.generate({\n      length: 10,\n      uppercase: false,\n    });\n    this.setState({\n      generated: true,\n      error: false,\n    });\n   setTimeout(() => {\n    this.setState({\n      generated:false\n    })\n   }, 3000);\n    this.handleChange(password);\n  };\n\n  handleChange = (value) => {\n    const { input } = this.props;\n    const { property_name } = input;\n    this.props.updateParentState(\"pw_changed\", true);\n    this.props.handleUpdate(property_name, value);\n  };\n  handleBlur = () => {\n    const { value } = this.props;\n    this.setState({\n      active: value,\n    });\n\n    this.setState({\n      error: !value,\n    });\n  };\n  handleFocus = () => {\n    this.setState({\n      active: true,\n      validation_error: false,\n      error: false,\n    });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { validate, input, value, is_edit } = this.props;\n    const { type } = input;\n    if (nextProps.validate !== validate && !is_edit) {\n      this.handleBlur(type, value);\n    }\n  }\n  handleCopy = () => {\n    this.setState({\n      copied: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        copied: false,\n      });\n    }, 2000);\n  };\n  render() {\n    const { input, value, is_edit } = this.props;\n    const { empty_text, label } = input;\n    const { active, error, generated, copied, show_password } = this.state;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        className={\n          active || value\n            ? \"password text__input--active flex__start\"\n            : \"password flex__start\"\n        }\n      >\n      \n        <section className='password__input'>\n        <input\n          placeholder={system_text[label]}\n          onChange={(e) => this.handleChange(e.target.value)}\n          type={show_password ? 'text':\"password\"}\n          value={value ? value : !value && is_edit ? \"********\" : \"\"}\n          autocomplete=\"new-password\"\n          onBlur={(e) => this.handleBlur()}\n          onFocus={(e) => this.handleFocus()}\n        />\n          <button\n          type='button'\n          className='flex__center'\n        onClick = {() => this.setState({show_password:!show_password})}\n        ><VisibilityOutlinedIcon /></button>\n        </section>\n        <section  className='password__actions flex__between'>\n        <CopyToClipboard text={value} onCopy={() => this.handleCopy()}>\n          <aside\n          style ={{\n            opacity:value ? 1 : 0.7,\n            pointerEvents:value ? 'all' : 'none'\n          }}\n          >\n          <BtnWithTooltip\n            svg={copied  ? <CheckCircleOutlineOutlinedIcon /> : <FileCopyOutlinedIcon />}\n            tooltip={system_text.COPY}\n          ></BtnWithTooltip >\n          </aside>\n        </CopyToClipboard>\n        <BtnWithTooltip\n          svg={generated  ?<CheckCircleOutlineOutlinedIcon /> : <LockOutlinedIcon />}\n          handleClick={this.generatePassword}\n          value={true}\n          tooltip={system_text.GENERATE}\n        />\n        </section>\n        {error ? (\n          <p className=\"text__input__error\">{system_text[empty_text]}</p>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ global }) {\n  return { global };\n}\n\nexport default connect(mapStateToProps, actions)(PasswordInput);\n"]},"metadata":{},"sourceType":"module"}