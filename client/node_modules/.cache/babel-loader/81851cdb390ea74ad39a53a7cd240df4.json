{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/App.jsx\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { DASHBOARD_ROUTE, LOGIN_ROUTE, SIGNUP_ROUTE, EMPLOYEE_DASHBOARD_ROUTE, EMPLOYEES_ROUTE, EMPLOYEE_DASHBOARD_PAGE_ROUTE } from \"./tools/routes\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/actions\";\nimport EmployeeDashboard from \"./components/employee-dashboard/EmployeeDashboard\";\nimport ErrorPopup from \"./parts/ErrorPopUp\";\nimport SuccessPopup from \"./parts/SuccessPopup\";\nimport { AUTH_TOKEN } from \"./tools/keys\";\nimport { LoginWithJwt } from \"./functions/auth_functions\";\nimport { getCookie } from \"./tools/cookie\";\nimport SignInForm from \"./components/login/parts/SignInForm\";\nimport SignUpForm from \"./components/login/parts/SignUpForm\";\nimport InvalidRoute from \"./components/invalid-route/InvalidRoute\";\nimport { apiGetRequest } from \"./tools/api\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleNoAccessRoutes = url => {\n      if (url.indexOf(\"signin\") === -1 && url.indexOf(\"signup\") === -1) {\n        this.props.history.push(LOGIN_ROUTE);\n      }\n    };\n\n    this.handleUserRouting = (user, url) => {\n      if (!url.split('/')[1]) {\n        if (user.is_manager) return this.props.history.push(EMPLOYEES_ROUTE);else return this.props.history.push(EMPLOYEE_DASHBOARD_PAGE_ROUTE.replace(':id', user._id));\n      }\n    };\n\n    this.close = () => {\n      this.props.updateGlobalReducer(\"error\", false);\n      this.props.updateGlobalReducer(\"success\", false);\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const token = await getCookie(AUTH_TOKEN);\n    const url = window.location.pathname;\n\n    if (token) {\n      const user = await LoginWithJwt();\n\n      if (user) {\n        this.props.updateUserReducer(\"user\", user);\n        this.handleUserRouting(user, url);\n      }\n    } else this.handleNoAccessRoutes(url);\n\n    this.setState({\n      page_loaded: true\n    });\n  }\n\n  render() {\n    const _this$props$global = this.props.global,\n          error = _this$props$global.error,\n          success = _this$props$global.success;\n    const user = this.props.user.user;\n    const page_loaded = this.state.page_loaded;\n    return page_loaded ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(SuccessPopup, {\n      active: true,\n      msg: success,\n      close: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(ErrorPopup, {\n      active: true,\n      error: error,\n      close: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, user && user._id ? React.createElement(Route, {\n      path: DASHBOARD_ROUTE,\n      render: () => React.createElement(Dashboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }) : null, React.createElement(Route, {\n      path: LOGIN_ROUTE,\n      render: () => React.createElement(SignInForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: SIGNUP_ROUTE,\n      render: () => React.createElement(SignUpForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), user && user._id ? React.createElement(Route, {\n      path: EMPLOYEE_DASHBOARD_ROUTE,\n      render: () => React.createElement(EmployeeDashboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }) : null, React.createElement(Route, {\n      path: \"*\",\n      exact: true,\n      component: InvalidRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))) : '';\n  }\n\n}\n\nfunction mapStateToProps({\n  router,\n  user,\n  global\n}) {\n  return {\n    router,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(App));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/App.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","withRouter","DASHBOARD_ROUTE","LOGIN_ROUTE","SIGNUP_ROUTE","EMPLOYEE_DASHBOARD_ROUTE","EMPLOYEES_ROUTE","EMPLOYEE_DASHBOARD_PAGE_ROUTE","Dashboard","connect","actions","EmployeeDashboard","ErrorPopup","SuccessPopup","AUTH_TOKEN","LoginWithJwt","getCookie","SignInForm","SignUpForm","InvalidRoute","apiGetRequest","App","constructor","handleNoAccessRoutes","url","indexOf","props","history","push","handleUserRouting","user","split","is_manager","replace","_id","close","updateGlobalReducer","state","componentDidMount","token","window","location","pathname","updateUserReducer","setState","page_loaded","render","global","error","success","mapStateToProps","router"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport {\n  DASHBOARD_ROUTE,\n  LOGIN_ROUTE,\n  SIGNUP_ROUTE,\n  EMPLOYEE_DASHBOARD_ROUTE,\n  EMPLOYEES_ROUTE,\n  EMPLOYEE_DASHBOARD_PAGE_ROUTE,\n} from \"./tools/routes\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/actions\";\nimport EmployeeDashboard from \"./components/employee-dashboard/EmployeeDashboard\";\nimport ErrorPopup from \"./parts/ErrorPopUp\";\nimport SuccessPopup from \"./parts/SuccessPopup\";\nimport { AUTH_TOKEN } from \"./tools/keys\";\nimport { LoginWithJwt } from \"./functions/auth_functions\";\nimport { getCookie } from \"./tools/cookie\";\nimport SignInForm from \"./components/login/parts/SignInForm\";\nimport SignUpForm from \"./components/login/parts/SignUpForm\";\nimport InvalidRoute from \"./components/invalid-route/InvalidRoute\";\nimport { apiGetRequest } from \"./tools/api\";\n\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  async componentDidMount() {\n    const token = await getCookie(AUTH_TOKEN);\n    const url = window.location.pathname;\n    if (token) {\n      const user = await LoginWithJwt();\n      if (user) {\n        this.props.updateUserReducer(\"user\", user);\n     \n        this.handleUserRouting(user, url);\n      }\n    } else this.handleNoAccessRoutes(url);\n\n    this.setState({\n      page_loaded:true\n    })\n  }\n\n  handleNoAccessRoutes = (url) => {\n    if (url.indexOf(\"signin\") === -1 && url.indexOf(\"signup\") === -1) {\n      this.props.history.push(LOGIN_ROUTE);\n    }\n  };\n\n  handleUserRouting = (user, url) => {\n    if(!url.split('/')[1]){\n      if (user.is_manager) return this.props.history.push(EMPLOYEES_ROUTE);\n      else\n        return this.props.history.push(\n          EMPLOYEE_DASHBOARD_PAGE_ROUTE.replace(':id', user._id)\n        );\n    }\n  \n  };\n\n  close = () => {\n    this.props.updateGlobalReducer(\"error\", false);\n    this.props.updateGlobalReducer(\"success\", false);\n  };\n  render() {\n    const { error, success } = this.props.global;\n \n    const { user } = this.props.user;\n    const {page_loaded} = this.state\n    return (\n      page_loaded ? <div>\n        <SuccessPopup active msg={success} close={this.close} />\n        <ErrorPopup active error={error} close={this.close} />\n        <Switch>\n          {user && user._id ? (\n            <Route path={DASHBOARD_ROUTE} render={() => <Dashboard />} />\n          ) : null}\n          <Route path={LOGIN_ROUTE} render={() => <SignInForm />} />\n          <Route path={SIGNUP_ROUTE} render={() => <SignUpForm />} />\n          {user && user._id ? (\n            <Route\n              path={EMPLOYEE_DASHBOARD_ROUTE}\n              render={() => <EmployeeDashboard />}\n            />\n          ) : null}\n          <Route path='*' exact={true} component={InvalidRoute} />\n        </Switch>\n      </div>  :''\n    );\n  }\n}\n\nfunction mapStateToProps({ router, user, global }) {\n  return { router, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(App));\n"]},"metadata":{},"sourceType":"module"}