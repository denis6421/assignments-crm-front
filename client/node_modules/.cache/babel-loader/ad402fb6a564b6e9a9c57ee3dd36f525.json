{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/parts/SingleDatepicker.jsx\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nclass SingleDatepicker extends Component {\n  constructor() {\n    super();\n\n    this.updateDimensions = () => {\n      if (window.innerWidth < 600) {\n        this.setState({\n          portal: true\n        });\n      } else {\n        this.setState({\n          portal: false\n        });\n      }\n    };\n\n    this.handleChange = date => {\n      const property_name = this.props.property_name;\n      this.props.sendDate(property_name, date);\n      this.setState({\n        error: false\n      });\n    };\n\n    this.handleDateChangeRaw = e => {\n      e.preventDefault();\n    };\n\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const _this$props = this.props,\n          validate = _this$props.validate,\n          date = _this$props.date;\n\n    if (nextProps.validate !== validate && !date) {\n      this.setState({\n        error: true\n      });\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          date = _this$props2.date,\n          title = _this$props2.title,\n          empty_error = _this$props2.empty_error;\n    const _this$state = this.state,\n          error = _this$state.error,\n          portal = _this$state.portal;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      onClick: () => this.props.scrolltop(),\n      className: \"datepicker__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, title), React.createElement(\"div\", {\n      className: \"datepicker__flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, !date ? React.createElement(\"aside\", {\n      className: \"datepicker__flex__placeholder flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(EventIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), \" \", React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, system_text.SELECT_DATE), \" \") : \"\", React.createElement(DatePicker, {\n      selected: date ? moment(date).toDate() : \"\",\n      onChange: date => this.handleChange(date) // showTimeSelect\n      ,\n      timeFormat: \"HH:mm\",\n      minDate: moment().toDate() // timeIntervals={15}\n      // timeCaption=\"time\"\n      ,\n      dateFormat: \"MMMM d, yyyy\",\n      onChangeRaw: this.handleDateChangeRaw,\n      withPortal: portal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), error ? React.createElement(\"p\", {\n      className: \"text__input__error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, empty_error) : \"\");\n  }\n\n}\n\nfunction mapStateToProps({\n  global\n}) {\n  return {\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SingleDatepicker);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/parts/SingleDatepicker.jsx"],"names":["React","Component","DatePicker","connect","actions","moment","EventIcon","SingleDatepicker","constructor","updateDimensions","window","innerWidth","setState","portal","handleChange","date","property_name","props","sendDate","error","handleDateChangeRaw","e","preventDefault","state","componentWillReceiveProps","nextProps","validate","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","title","empty_error","system_text","global","scrolltop","SELECT_DATE","toDate","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/actions\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nclass SingleDatepicker extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { validate, date } = this.props;\n    if (nextProps.validate !== validate && !date) {\n      this.setState({\n        error: true,\n      });\n    }\n  }\n  updateDimensions = () => {\n    if( window.innerWidth < 600){\n        this.setState({\n            portal:true\n        })\n    }else{\n        this.setState({\n            portal:false\n        })\n    }\n};\n  componentDidMount() {\n    window.addEventListener('resize', this.updateDimensions);\n    this.updateDimensions()\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions);\n  }\n\n\n  handleChange = (date) => {\n    const { property_name } = this.props;\n    this.props.sendDate(property_name, date);\n    this.setState({\n      error: false,\n    });\n  };\n  handleDateChangeRaw = (e) => {\n    e.preventDefault();\n  };\n\n  render() {\n    const { date, title, empty_error } = this.props;\n    const { error, portal } = this.state;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        onClick={() => this.props.scrolltop()}\n        className=\"datepicker__wrapper\"\n      >\n        <h3>{title}</h3>\n        <div className=\"datepicker__flex\">\n          {!date ? (\n            <aside className=\"datepicker__flex__placeholder flex__start\">\n              <EventIcon /> <h4>{system_text.SELECT_DATE}</h4>{\" \"}\n            </aside>\n          ) : (\n            \"\"\n          )}\n          <DatePicker\n            selected={date ? moment(date).toDate() : \"\"}\n            onChange={(date) => this.handleChange(date)}\n            // showTimeSelect\n            timeFormat=\"HH:mm\"\n            minDate={moment().toDate()}\n            // timeIntervals={15}\n            // timeCaption=\"time\"\n            dateFormat=\"MMMM d, yyyy\"\n            onChangeRaw={this.handleDateChangeRaw}\n            withPortal = {portal}\n          />\n        </div>\n        {error ? <p className=\"text__input__error\">{empty_error}</p> : \"\"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ global }) {\n  return { global };\n}\n\nexport default connect(mapStateToProps, actions)(SingleDatepicker);\n"]},"metadata":{},"sourceType":"module"}