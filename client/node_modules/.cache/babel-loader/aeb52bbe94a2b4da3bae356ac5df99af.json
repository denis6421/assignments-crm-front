{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employee-dashboard/EmployeeDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport Navbar from \"../navbar/Navbar\";\nimport { EMPLOYEE_DASHBOARD_PAGE_ROUTE, EMPLOYEE_DASHBOARD_SETTINGS } from \"../../tools/routes\";\nimport EmployeePage from \"../employee-page/EmployeePage\";\nimport Settings from \"../settings/Settings\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { employee_navigations } from \"../navbar/navigations\";\nimport { apiGetRequest } from \"../../tools/api\";\nimport { employee_settings } from \"../settings/settings_routes\";\nimport { hasPermission } from \"../../functions/permission_functions\";\nimport { EDIT_PROFILE } from \"../settings/categories/permissions/Permissions_keys\";\n\nclass EmployeeDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const user = this.props.user.user;\n    const api = \"account-settings?id=\".concat(user.user);\n    const res = await apiGetRequest(api);\n\n    if (res.ok) {\n      this.props.updateUserReducer('permissions', res.result.permissions);\n      this.props.setSystemLanguage(res.result.language);\n      let navigations = employee_navigations;\n\n      if (!hasPermission(user, res.result.permissions, EDIT_PROFILE)) {\n        navigations = navigations.filter(m => m.value !== \"settings\");\n      }\n\n      this.setState({\n        navigations\n      });\n    }\n\n    this.setState({\n      page_loaded: true\n    });\n  }\n\n  render() {\n    const user = this.props.user.user;\n    const language = this.props.global.language;\n    const _this$state = this.state,\n          navigations = _this$state.navigations,\n          page_loaded = _this$state.page_loaded;\n    return user && navigations && page_loaded && language ? React.createElement(\"div\", {\n      className: \"dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      navigations: navigations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: EMPLOYEE_DASHBOARD_PAGE_ROUTE,\n      render: () => React.createElement(EmployeePage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: EMPLOYEE_DASHBOARD_SETTINGS,\n      render: () => React.createElement(Settings, {\n        settings_routes: employee_settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })))) : \"\";\n  }\n\n}\n\nfunction mapStateToProps({\n  user,\n  global\n}) {\n  return {\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeDashboard));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employee-dashboard/EmployeeDashboard.jsx"],"names":["React","Component","BrowserRouter","Router","Route","Switch","withRouter","Navbar","EMPLOYEE_DASHBOARD_PAGE_ROUTE","EMPLOYEE_DASHBOARD_SETTINGS","EmployeePage","Settings","connect","actions","employee_navigations","apiGetRequest","employee_settings","hasPermission","EDIT_PROFILE","EmployeeDashboard","constructor","state","componentDidMount","user","props","api","res","ok","updateUserReducer","result","permissions","setSystemLanguage","language","navigations","filter","m","value","setState","page_loaded","render","global","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,kBALP;AAMA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SACEC,6BADF,EAEEC,2BAFF,QAGO,oBAHP;AAIA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AACA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,aAAT,QAA8B,sCAA9B;AACA,SAASC,YAAT,QAA6B,qDAA7B;;AAEA,MAAMC,iBAAN,SAAgClB,SAAhC,CAA0C;AACxCmB,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AACD,QAAMC,iBAAN,GAA0B;AAAA,UAChBC,IADgB,GACP,KAAKC,KAAL,CAAWD,IADJ,CAChBA,IADgB;AAExB,UAAME,GAAG,iCAA0BF,IAAI,CAACA,IAA/B,CAAT;AACA,UAAMG,GAAG,GAAG,MAAMX,aAAa,CAACU,GAAD,CAA/B;;AACA,QAAIC,GAAG,CAACC,EAAR,EAAY;AACV,WAAKH,KAAL,CAAWI,iBAAX,CAA6B,aAA7B,EAA4CF,GAAG,CAACG,MAAJ,CAAWC,WAAvD;AACE,WAAKN,KAAL,CAAWO,iBAAX,CAA6BL,GAAG,CAACG,MAAJ,CAAWG,QAAxC;AACF,UAAIC,WAAW,GAAGnB,oBAAlB;;AACA,UAAI,CAACG,aAAa,CAACM,IAAD,EAAOG,GAAG,CAACG,MAAJ,CAAWC,WAAlB,EAA+BZ,YAA/B,CAAlB,EAAgE;AAC9De,QAAAA,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAY,UAAtC,CAAd;AACD;;AACD,WAAKC,QAAL,CAAc;AACZJ,QAAAA;AADY,OAAd;AAGD;;AACD,SAAKI,QAAL,CAAc;AACZC,MAAAA,WAAW,EAAC;AADA,KAAd;AAGD;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACChB,IADD,GACU,KAAKC,KAAL,CAAWD,IADrB,CACCA,IADD;AAAA,UAEAS,QAFA,GAEY,KAAKR,KAAL,CAAWgB,MAFvB,CAEAR,QAFA;AAAA,wBAG8B,KAAKX,KAHnC;AAAA,UAGCY,WAHD,eAGCA,WAHD;AAAA,UAGcK,WAHd,eAGcA,WAHd;AAKP,WAAOf,IAAI,IAAIU,WAAR,IAAuBK,WAAvB,IAAsCN,QAAtC,GACL;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAEC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAEE,MAAA,IAAI,EAAEzB,6BAFR;AAGE,MAAA,MAAM,EAAE,MAAM,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEC,2BADR;AAEE,MAAA,MAAM,EAAE,MAAM,oBAAC,QAAD;AAAU,QAAA,eAAe,EAAEO,iBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF,CADF,CADK,GAkBL,EAlBF;AAoBD;;AAjDuC;;AAoD1C,SAASyB,eAAT,CAAyB;AAAElB,EAAAA,IAAF;AAAQiB,EAAAA;AAAR,CAAzB,EAA2C;AACzC,SAAO;AAAEjB,IAAAA,IAAF;AAAQiB,IAAAA;AAAR,GAAP;AACD;;AAED,eAAelC,UAAU,CAACM,OAAO,CAAC6B,eAAD,EAAkB5B,OAAlB,CAAP,CAAkCM,iBAAlC,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport Navbar from \"../navbar/Navbar\";\nimport {\n  EMPLOYEE_DASHBOARD_PAGE_ROUTE,\n  EMPLOYEE_DASHBOARD_SETTINGS,\n} from \"../../tools/routes\";\nimport EmployeePage from \"../employee-page/EmployeePage\";\nimport Settings from \"../settings/Settings\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { employee_navigations } from \"../navbar/navigations\";\nimport { apiGetRequest } from \"../../tools/api\";\nimport { employee_settings } from \"../settings/settings_routes\";\nimport { hasPermission } from \"../../functions/permission_functions\";\nimport { EDIT_PROFILE } from \"../settings/categories/permissions/Permissions_keys\";\n\nclass EmployeeDashboard extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  async componentDidMount() {\n    const { user } = this.props.user;\n    const api = `account-settings?id=${user.user}`;\n    const res = await apiGetRequest(api);\n    if (res.ok) {\n      this.props.updateUserReducer('permissions', res.result.permissions)\n        this.props.setSystemLanguage(res.result.language)\n      let navigations = employee_navigations;\n      if (!hasPermission(user, res.result.permissions, EDIT_PROFILE)) {\n        navigations = navigations.filter((m) => m.value !== \"settings\");\n      }\n      this.setState({\n        navigations,\n      });\n    }\n    this.setState({\n      page_loaded:true\n    })\n  }\n  render() {\n    const { user } = this.props.user;\n    const {language} = this.props.global\n    const { navigations, page_loaded } = this.state;\n\n    return user && navigations && page_loaded && language? (\n      <div className=\"dashboard\">\n        <Router>\n          <Navbar navigations={navigations} />\n          <Switch>\n            <Route\n             \n              path={EMPLOYEE_DASHBOARD_PAGE_ROUTE}\n              render={() => <EmployeePage />}\n            />\n            <Route\n              path={EMPLOYEE_DASHBOARD_SETTINGS}\n              render={() => <Settings settings_routes={employee_settings} />}\n            />\n          </Switch>\n        </Router>\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nfunction mapStateToProps({ user, global }) {\n  return { user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeDashboard));\n"]},"metadata":{},"sourceType":"module"}