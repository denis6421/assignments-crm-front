{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/navbar/Navbar.jsx\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SmallPopup from \"../../parts/SmallPopup\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { LOGIN_ROUTE, SETTINGS_ROUTE } from \"../../tools/routes\";\nimport { removeCookie } from \"../../tools/cookie\";\nimport { AUTH_TOKEN } from \"../../tools/keys\";\nimport ExitToAppSharpIcon from \"@material-ui/icons/ExitToAppSharp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst isActive = (url, value) => {\n  if (url.indexOf(value) > -1) return true;\n  return false;\n};\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.logout = () => {\n      removeCookie(AUTH_TOKEN);\n      this.props.history.push(LOGIN_ROUTE);\n      window.location.reload();\n    };\n\n    this.onLoad = () => {\n      this.setState({\n        img_loaded: true\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentWillReceiveProps(nextPros) {\n    let url = nextPros.location.pathname;\n    this.setState({\n      url\n    });\n  }\n\n  componentDidMount() {\n    let url = window.location.pathname;\n    this.setState({\n      url,\n      page_loaded: true\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          url = _this$state.url,\n          page_loaded = _this$state.page_loaded,\n          img_loaded = _this$state.img_loaded,\n          mobile_menu = _this$state.mobile_menu;\n    const user = this.props.user.user;\n    const navigations = this.props.navigations;\n    const system_text = this.props.global.system_text;\n    const style = {\n      left: \"110%\",\n      top: \"50%\",\n      transform: \"translate(0, -50%)\"\n    };\n    return page_loaded ? React.createElement(\"nav\", {\n      className: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'none'\n      },\n      onClick: () => this.setState({\n        mobile_menu: !mobile_menu\n      }),\n      className: \"mobile__hamburger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"figure\", {\n      className: \"employee__img navbar__user__avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, user && user.avatar ? React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      src: user.avatar,\n      style: {\n        opacity: img_loaded ? 1 : 0,\n        transition: '0.2s all'\n      },\n      onLoad: () => this.onLoad(),\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), !img_loaded ? React.createElement(\"aside\", {\n      className: \"avatar__loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }) : '') : React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"section\", {\n      id: mobile_menu ? 'navbar__list--active' : '',\n      className: \"navbar__list flex__column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, navigations && navigations.length > 0 ? navigations.map((m, i) => {\n      return React.createElement(Link, {\n        style: {\n          marginTop: m.last ? 'auto' : ''\n        },\n        id: isActive(url, m.value) ? \"navbar__list__link--active\" : \"\",\n        className: \"navbar__list__link flex__center\",\n        key: i,\n        to: m.param ? m.url.replace(m.param, user._id) : m.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, m.img, React.createElement(SmallPopup, {\n        arrow_class: \"arrow-left\",\n        style: style,\n        text: system_text[m.text],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    }) : ''), React.createElement(\"button\", {\n      style: {\n        background: 'transparent',\n        border: '0px'\n      },\n      className: \"navbar__list__link navbar__logout__link\",\n      onClick: () => this.logout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(SmallPopup, {\n      arrow_class: \"arrow-left\",\n      style: style,\n      text: system_text.LOGOUT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(ExitToAppSharpIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))) : '';\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  navbar,\n  user,\n  global\n}) {\n  return {\n    employees,\n    navbar,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(Navbar));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/navbar/Navbar.jsx"],"names":["React","Component","Link","withRouter","SmallPopup","connect","actions","LOGIN_ROUTE","SETTINGS_ROUTE","removeCookie","AUTH_TOKEN","ExitToAppSharpIcon","PersonIcon","MenuIcon","isActive","url","value","indexOf","Navbar","constructor","logout","props","history","push","window","location","reload","onLoad","setState","img_loaded","state","componentWillReceiveProps","nextPros","pathname","componentDidMount","page_loaded","render","mobile_menu","user","navigations","system_text","global","style","left","top","transform","display","avatar","opacity","transition","length","map","m","i","marginTop","last","param","replace","_id","img","text","background","border","LOGOUT","mapStateToProps","employees","navbar"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SmallPopup from \"../../parts/SmallPopup\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport { LOGIN_ROUTE, SETTINGS_ROUTE } from \"../../tools/routes\";\nimport { removeCookie } from \"../../tools/cookie\";\nimport { AUTH_TOKEN } from \"../../tools/keys\";\nimport ExitToAppSharpIcon from \"@material-ui/icons/ExitToAppSharp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport MenuIcon from '@material-ui/icons/Menu';\nconst isActive = (url, value) => {\n  if(url.indexOf(value) > -1) return true\n  return false\n}\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentWillReceiveProps(nextPros) {\n    let url = nextPros.location.pathname\n    this.setState({\n      url\n    })\n  }\n  componentDidMount() {\n    let url = window.location.pathname\n   this.setState({\n     url,\n     page_loaded:true\n   })\n  }\n\n\n\n  logout = () => {\n    removeCookie(AUTH_TOKEN);\n    this.props.history.push(LOGIN_ROUTE);\n    window.location.reload();\n  };\nonLoad = () => {\n  this.setState({\n    img_loaded:true\n  })\n}\n  render() {\n    const { url , page_loaded, img_loaded, mobile_menu} = this.state;\n    const { user } = this.props.user;\n    const {navigations} = this.props\n    const {system_text} = this.props.global\n    const style = {\n      left: \"110%\",\n      top: \"50%\",\n      transform: \"translate(0, -50%)\",\n    };\n    return (\n      page_loaded ?  <nav className=\"navbar\">\n        <div \n        style ={{\n          display:'none'\n        }}\n        onClick = {() => this.setState({\n          mobile_menu:!mobile_menu\n        })}\n        className='mobile__hamburger'><MenuIcon /></div>\n         <figure className='employee__img navbar__user__avatar'>\n            {user && user.avatar ?\n            <>\n             <img src={user.avatar}\n             style ={{\n               opacity:img_loaded ? 1 : 0,\n               transition:'0.2s all'\n             }}\n             onLoad = {() => this.onLoad()}\n             alt=\"\" /> \n            {!img_loaded  ? <aside className='avatar__loader'></aside> : ''}\n             </>\n             : <PersonIcon />}\n          </figure>\n        <section \n        id={mobile_menu ? 'navbar__list--active'  :''}\n        className=\"navbar__list flex__column\">\n         \n          {navigations && \n          navigations.length  > 0 ?\n           navigations.map((m, i) => {\n                return (\n                  <Link\n                  style ={{\n                    marginTop:m.last ? 'auto' : ''\n                  }}\n                    id={\n                      isActive(url, m.value) ? \"navbar__list__link--active\" : \"\"\n                    }\n                    className=\"navbar__list__link flex__center\"\n                    key={i}\n                    to={m.param ? m.url.replace(m.param, user._id) : m.url}\n                  >\n                    {m.img}\n                    <SmallPopup\n                      arrow_class=\"arrow-left\"\n                      style={style}\n                      text={system_text[m.text]}\n                    />\n                  </Link>\n                );\n              })\n              :''}\n         \n        </section>\n        <button\n         style ={{\n           background:'transparent',\n           border:'0px',\n         }}\n              className=\"navbar__list__link navbar__logout__link\"\n              onClick={() => this.logout()}\n            >\n              <SmallPopup\n                arrow_class=\"arrow-left\"\n                style={style}\n                text={system_text.LOGOUT}\n              />\n              <ExitToAppSharpIcon />\n            </button>\n      </nav>  :''\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, navbar, user, global }) {\n  return { employees, navbar, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(Navbar));\n"]},"metadata":{},"sourceType":"module"}