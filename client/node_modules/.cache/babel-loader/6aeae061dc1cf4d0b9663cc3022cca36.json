{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/employee-page/employee-assignments/EmployeeTodoList.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport AssignmentsList from \"./AssignmentsList\";\nimport EmployeeAssignment from \"./EmployeeAssignment\";\nimport AssignmentLoader from \"../../assignments/parts/AssignmentLoader\";\nimport { hasPermission } from \"../../../functions/permission_functions\";\nimport { CREATE_ASSIGNMENTS } from \"../../settings/categories/permissions/Permissions_keys\";\nimport { filterEmployeeAssignments } from \"../../../functions/employe_assignments_functions\";\nimport NoData from \"../../../parts/NoData\";\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport BtnWithTooltip from \"../../../parts/BtnWithTooltip\";\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\n\nconst getAssignmentsAmount = (arr, value) => {\n  if (arr && arr.length > 0) {\n    let num = 0;\n    arr.forEach(element => {\n      if (element.status === value) {\n        num++;\n      }\n    });\n    return num;\n  } else {\n    return 0;\n  }\n};\n\nclass EmployeeTodoList extends Component {\n  constructor() {\n    super();\n\n    this.handleFilter = val => {\n      this.setState({\n        status: val\n      });\n    };\n\n    this.toggleAssignmentsList = val => {\n      this.setState({\n        show_assignments: val\n      });\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.openCreateAssignment = () => {\n      this.props.handleAssignment(true, true);\n    };\n\n    this.state = {\n      status: \"pending\"\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        page_loaded: true\n      });\n    }, 20);\n  }\n\n  componentWillUnmount() {\n    this.toggleAssignmentsList(false);\n  }\n\n  render() {\n    const _this$props = this.props,\n          employee = _this$props.employee,\n          assignments_list = _this$props.assignments_list,\n          assignments_loaded = _this$props.assignments_loaded;\n    const _this$props$user = this.props.user,\n          user = _this$props$user.user,\n          permissions = _this$props$user.permissions;\n    const _this$state = this.state,\n          status = _this$state.status,\n          show_assignments = _this$state.show_assignments,\n          page_loaded = _this$state.page_loaded;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      style: {\n        opacity: page_loaded ? 1 : 0\n      },\n      className: \"employee__page__assignments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, employee ? React.createElement(AssignmentsList, {\n      employee_id: employee._id,\n      assignments_list: Array.isArray(assignments_list) ? assignments_list : [],\n      employee: employee,\n      show_assignments: show_assignments,\n      handleAssignment: this.props.handleAssignment,\n      toggleAssignmentsList: this.toggleAssignmentsList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }) : null, React.createElement(\"div\", {\n      className: \"page__flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"employee__page__assignments__header flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, hasPermission(user, permissions, CREATE_ASSIGNMENTS) ? React.createElement(\"span\", {\n      className: \"flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(BtnWithTooltip, {\n      svg: React.createElement(LibraryAddOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      handleClick: () => this.props.handleAssignment(true),\n      tooltip: system_text.CREATE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), user.is_manager ? React.createElement(BtnWithTooltip, {\n      svg: React.createElement(AssignmentOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      handleClick: () => this.toggleAssignmentsList(!show_assignments),\n      tooltip: system_text.TEMPLATES,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }) : null) : \"\"), React.createElement(\"div\", {\n      className: \"employee__page__assignments__flex \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"flex__start\",\n      id: \"employee__page__assignments__actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, system_text.ASSIGNMENT_STATUS_ARR.map((m, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        className: \"flex__center\",\n        id: status === m.value ? 'employee__page__assignments__actions--active' : '',\n        onClick: () => this.handleFilter(m.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, m.img, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \" \", m.text), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"(\", getAssignmentsAmount(employee.assignments, m.value), \")\"));\n    })), filterEmployeeAssignments(employee.assignments, status) ? React.createElement(\"section\", {\n      id: \"employee__assignments__titles\",\n      className: \"flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, system_text.EMPLOYEE_ASSIGNMENTS_TITLES.map((m, i) => {\n      return React.createElement(\"h3\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, m);\n    })) : null, React.createElement(\"ul\", {\n      className: \"flex__start\",\n      id: \"employee__assignments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, !assignments_loaded ? React.createElement(AssignmentLoader, {\n      arr: [...Array(3).keys()],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : assignments_loaded && !filterEmployeeAssignments(employee.assignments, status) ? React.createElement(NoData, {\n      create: this.openCreateAssignment,\n      text: system_text.NO_ASSIGNMENTS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }) : filterEmployeeAssignments(employee.assignments, status).map(m => {\n      return React.createElement(EmployeeAssignment, {\n        key: m._id,\n        m: m,\n        createAndUpdateAssignment: this.props.createAndUpdateAssignment,\n        handleAssignment: this.props.handleAssignment,\n        handleDelete: this.props.handleDelete,\n        key: m._id,\n        handleAssignmentComments: this.props.handleAssignmentComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    })))));\n  }\n\n}\n\nfunction mapStateToProps({\n  employees,\n  assignments,\n  user,\n  global\n}) {\n  return {\n    employees,\n    assignments,\n    user,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeTodoList));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/employee-page/employee-assignments/EmployeeTodoList.jsx"],"names":["React","Component","connect","actions","withRouter","AssignmentsList","EmployeeAssignment","AssignmentLoader","hasPermission","CREATE_ASSIGNMENTS","filterEmployeeAssignments","NoData","LibraryAddOutlinedIcon","BtnWithTooltip","AssignmentOutlinedIcon","getAssignmentsAmount","arr","value","length","num","forEach","element","status","EmployeeTodoList","constructor","handleFilter","val","setState","toggleAssignmentsList","show_assignments","updateState","name","openCreateAssignment","props","handleAssignment","state","componentDidMount","setTimeout","page_loaded","componentWillUnmount","render","employee","assignments_list","assignments_loaded","user","permissions","system_text","global","opacity","_id","Array","isArray","CREATE","is_manager","TEMPLATES","ASSIGNMENT_STATUS_ARR","map","m","i","img","text","assignments","EMPLOYEE_ASSIGNMENTS_TITLES","keys","NO_ASSIGNMENTS","createAndUpdateAssignment","handleDelete","handleAssignmentComments","mapStateToProps","employees"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/actions\";\nimport { withRouter } from \"react-router\";\nimport AssignmentsList from \"./AssignmentsList\";\nimport EmployeeAssignment from \"./EmployeeAssignment\";\nimport AssignmentLoader from \"../../assignments/parts/AssignmentLoader\";\nimport { hasPermission } from \"../../../functions/permission_functions\";\nimport { CREATE_ASSIGNMENTS } from \"../../settings/categories/permissions/Permissions_keys\";\nimport { filterEmployeeAssignments } from \"../../../functions/employe_assignments_functions\";\nimport NoData from \"../../../parts/NoData\";\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport BtnWithTooltip from \"../../../parts/BtnWithTooltip\";\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\n\nconst getAssignmentsAmount = (arr, value) => {\n  if (arr && arr.length > 0) {\n    let num = 0;\n    arr.forEach((element) => {\n      if (element.status === value) {\n        num++;\n      }\n    });\n    return num;\n  } else {\n    return 0;\n  }\n};\n\nclass EmployeeTodoList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      status: \"pending\",\n    };\n  }\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        page_loaded: true,\n      });\n    }, 20);\n  }\n  handleFilter = (val) => {\n    this.setState({\n      status: val,\n    });\n  };\n  componentWillUnmount() {\n    this.toggleAssignmentsList(false);\n  }\n  toggleAssignmentsList = (val) => {\n    this.setState({\n      show_assignments: val,\n    });\n  };\n\n  updateState = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n  openCreateAssignment = () => {\n    this.props.handleAssignment(true, true);\n  };\n  render() {\n    const { employee, assignments_list, assignments_loaded } = this.props;\n    const { user, permissions } = this.props.user;\n    const { status, show_assignments, page_loaded } = this.state;\n    const { system_text } = this.props.global;\n    return (\n      <div\n        style={{\n          opacity: page_loaded ? 1 : 0,\n        }}\n        className=\"employee__page__assignments\"\n      >\n        {employee ? (\n          <AssignmentsList\n            employee_id={employee._id}\n            assignments_list={\n              Array.isArray(assignments_list) ? assignments_list : []\n            }\n            employee={employee}\n            show_assignments={show_assignments}\n            handleAssignment={this.props.handleAssignment}\n            toggleAssignmentsList={this.toggleAssignmentsList}\n          />\n        ) : null}\n        <div className=\"page__flex\">\n          <header className=\"employee__page__assignments__header flex__start\">\n            {hasPermission(user, permissions, CREATE_ASSIGNMENTS) ? (\n              <span className=\"flex__start\">\n                <BtnWithTooltip\n               svg = {<LibraryAddOutlinedIcon />}\n               handleClick = {() => this.props.handleAssignment(true)}\n               tooltip = {system_text.CREATE}\n                />\n      \n                {user.is_manager ? (\n                   <BtnWithTooltip\n                   svg = {<AssignmentOutlinedIcon />}\n                   handleClick = {() => this.toggleAssignmentsList(!show_assignments)}\n                   tooltip = {system_text.TEMPLATES}\n                    />\n                ) : null}\n              </span>\n            ) : (\n              \"\"\n            )}\n          </header>\n          <div className=\"employee__page__assignments__flex \">\n            <ul\n              className=\"flex__start\"\n              id=\"employee__page__assignments__actions\"\n            >\n              {system_text.ASSIGNMENT_STATUS_ARR.map((m, i) => {\n                return (\n                  <li\n                    key={i}\n                    className=\"flex__center\"\n                    id = {status === m.value ? 'employee__page__assignments__actions--active' : ''}\n                    onClick={() => this.handleFilter(m.value)}\n                  >\n                    {m.img}\n                    <h3> {m.text}</h3>\n                    <h5>\n                      ({getAssignmentsAmount(employee.assignments, m.value)})\n                    </h5>\n                  </li>\n                );\n              })}\n            </ul>\n            {filterEmployeeAssignments(employee.assignments, status) ? (\n              <section\n                id=\"employee__assignments__titles\"\n                className=\"flex__start\"\n              >\n               {system_text.EMPLOYEE_ASSIGNMENTS_TITLES.map((m,i) => {\n                 return <h3 key = {i}>{m}</h3>\n               })}\n              </section>\n            ) : null}\n            <ul className=\"flex__start\" id=\"employee__assignments\">\n              {!assignments_loaded ? (\n                <AssignmentLoader arr={[...Array(3).keys()]} />\n              ) : assignments_loaded &&\n                !filterEmployeeAssignments(employee.assignments, status) ? (\n                <NoData\n                  create={this.openCreateAssignment}\n                  text={system_text.NO_ASSIGNMENTS}\n                />\n              ) : (\n                filterEmployeeAssignments(employee.assignments, status).map(\n                  (m) => {\n                    return (\n                      <EmployeeAssignment\n                        key={m._id}\n                        m={m}\n                        createAndUpdateAssignment={\n                          this.props.createAndUpdateAssignment\n                        }\n                        handleAssignment={this.props.handleAssignment}\n                        handleDelete={this.props.handleDelete}\n                        key={m._id}\n                        handleAssignmentComments={\n                          this.props.handleAssignmentComments\n                        }\n                      />\n                    );\n                  }\n                )\n              )}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ employees, assignments, user, global }) {\n  return { employees, assignments, user, global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(EmployeeTodoList));\n"]},"metadata":{},"sourceType":"module"}