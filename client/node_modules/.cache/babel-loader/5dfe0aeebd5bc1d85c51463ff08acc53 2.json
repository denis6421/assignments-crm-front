{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/overview/parts/PieChart.jsx\";\nimport React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { apiGetRequest } from '../../../tools/api';\n\nclass PieChart extends Component {\n  constructor() {\n    super();\n\n    this.getGraphData = async () => {\n      const api = 'overview/assignments';\n      const res = await apiGetRequest(api);\n\n      if (res.ok) {\n        let values = res.result;\n        const graph_data = {\n          labels: ['Pending', 'In progress', 'Done'],\n          datasets: [{\n            data: [values.pending, values.in_progress, values.done],\n            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n            hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']\n          }]\n        };\n        this.setState({\n          graph_data\n        });\n      }\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.getGraphData();\n  }\n\n  render() {\n    const graph_data = this.state.graph_data;\n    const options = {\n      label: {\n        display: false\n      },\n      responsive: true\n    };\n    return React.createElement(\"div\", {\n      className: \"overview__section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, graph_data ? React.createElement(Doughnut, {\n      data: graph_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : '');\n  }\n\n}\n\nexport default PieChart;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/overview/parts/PieChart.jsx"],"names":["React","Component","Doughnut","apiGetRequest","PieChart","constructor","getGraphData","api","res","ok","values","result","graph_data","labels","datasets","data","pending","in_progress","done","backgroundColor","hoverBackgroundColor","setState","state","componentDidMount","render","options","label","display","responsive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;AAGA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,GAAE;AACT;;AADS,SAYbC,YAZa,GAYE,YAAa;AACxB,YAAMC,GAAG,GAAG,sBAAZ;AACA,YAAMC,GAAG,GAAI,MAAML,aAAa,CAACI,GAAD,CAAhC;;AACA,UAAGC,GAAG,CAACC,EAAP,EAAU;AACN,YAAIC,MAAM,GAAGF,GAAG,CAACG,MAAjB;AACA,cAAMC,UAAU,GAAG;AACfC,UAAAA,MAAM,EAAE,CACJ,SADI,EAEJ,aAFI,EAGJ,MAHI,CADO;AAMfC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,IAAI,EAAE,CAACL,MAAM,CAACM,OAAR,EAAiBN,MAAM,CAACO,WAAxB,EAAqCP,MAAM,CAACQ,IAA5C,CADC;AAEPC,YAAAA,eAAe,EAAE,CACjB,SADiB,EAEjB,SAFiB,EAGjB,SAHiB,CAFV;AAOPC,YAAAA,oBAAoB,EAAE,CACtB,SADsB,EAEtB,SAFsB,EAGtB,SAHsB;AAPf,WAAD;AANK,SAAnB;AAoBA,aAAKC,QAAL,CAAc;AACVT,UAAAA;AADU,SAAd;AAGH;AACJ,KAzCY;;AAET,SAAKU,KAAL,GAAa,EAAb;AAGH;;AAEAC,EAAAA,iBAAiB,GAAE;AAChB,SAAKjB,YAAL;AACH;;AAmCDkB,EAAAA,MAAM,GAAG;AAAA,UACEZ,UADF,GACgB,KAAKU,KADrB,CACEV,UADF;AAEL,UAAMa,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAC;AACFC,QAAAA,OAAO,EAAC;AADN,OADM;AAIZC,MAAAA,UAAU,EAAC;AAJC,KAAhB;AAMA,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACChB,UAAU,GAAG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAoC,EAD/C,CADJ;AAKH;;AA1D4B;;AA6DjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { apiGetRequest } from '../../../tools/api';\n\n\nclass PieChart extends Component {\n    constructor(){\n        super()\n        this.state = {\n\n        }\n    }\n\n     componentDidMount(){\n        this.getGraphData()\n    }\n\n\n    getGraphData = async  () => {\n        const api = 'overview/assignments'\n        const res  = await apiGetRequest(api)\n        if(res.ok){\n            let values = res.result\n            const graph_data = {\n                labels: [\n                    'Pending',\n                    'In progress',\n                    'Done'\n                ],\n                datasets: [{\n                    data: [values.pending, values.in_progress, values.done],\n                    backgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56'\n                    ],\n                    hoverBackgroundColor: [\n                    '#FF6384',\n                    '#36A2EB',\n                    '#FFCE56'\n                    ]\n                }]\n            };\n            this.setState({\n                graph_data\n            })\n        }\n    }\n \n    \n    render() {\n        const {graph_data} = this.state\n        const options = {\n            label:{\n                display:false\n            },\n            responsive:true\n        }\n        return (\n            <div className='overview__section'>\n           { graph_data ? <Doughnut data={graph_data} /> : ''}\n          </div>\n        );\n    }\n}\n\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}