{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/assignments/AssignmentTemplates.jsx\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport Assignment from \"./parts/Assignment\";\nimport HandleAssignment from \"./parts/HandleAssignment\";\nimport PopupWithFunction from \"../../parts/PopupWithFunction\";\nimport { apiPostRequest, apiGetRequest } from \"../../tools/api\";\nimport AssignmentLoader from \"./parts/AssignmentLoader\";\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport BtnWithTooltip from \"../../parts/BtnWithTooltip\";\nimport NoData from \"../../parts/NoData\";\n\nclass AssignmentTemplates extends Component {\n  constructor() {\n    super();\n\n    this.toggleHandleAssignment = (status, assignment_to_edit) => {\n      this.setState({\n        handle_assignment: status,\n        assignment_to_edit\n      });\n    };\n\n    this.handleRemove = assignment_to_remove => {\n      this.setState({\n        assignment_to_remove\n      });\n    };\n\n    this.close = () => {\n      this.setState({\n        assignment_to_remove: \"\",\n        handle_assignment: \"\"\n      });\n    };\n\n    this.remove = async () => {\n      const assignment_to_remove = this.state.assignment_to_remove;\n      const assignments_list = this.props.assignments.assignments_list;\n      this.setState({\n        remove_loading: true\n      });\n      const api = \"assignment/delete\";\n      const res = await apiPostRequest(api, {\n        id: assignment_to_remove._id\n      });\n\n      if (res.ok) {\n        this.props.removeAssignment(assignment_to_remove, assignments_list);\n        this.close();\n      }\n\n      setTimeout(() => {\n        this.setState({\n          remove_loading: false\n        });\n      }, 400);\n    };\n\n    this.create = async assignment => {\n      const assignments_list = this.props.assignments.assignments_list;\n      const api = \"assignment\";\n      this.setState({\n        loading: true\n      });\n      const res = await apiPostRequest(api, assignment);\n\n      if (res.ok) {\n        this.props.addAssignment(res.result, assignments_list);\n      }\n\n      this.props.updateGlobalReducer(\"success\", \"Assignment created successfully\");\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.edit = async assignment => {\n      const assignments_list = this.props.assignments.assignments_list;\n      const api = \"assignment\";\n      this.setState({\n        loading: true\n      });\n      const res = await apiPostRequest(api, assignment);\n\n      if (res.ok) {\n        this.props.updateAssignment(res.result, assignments_list);\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const api = \"assignment\";\n    const res = await apiGetRequest(api);\n\n    if (res.ok) {\n      this.props.setDataToAssignmentsReducer(\"assignments_list\", res.result);\n      this.setState({\n        assignments_loaded: true\n      });\n    }\n  }\n\n  render() {\n    const assignments_list = this.props.assignments.assignments_list;\n    const _this$state = this.state,\n          handle_assignment = _this$state.handle_assignment,\n          assignment_to_edit = _this$state.assignment_to_edit,\n          assignment_to_remove = _this$state.assignment_to_remove,\n          loading = _this$state.loading,\n          assignments_loaded = _this$state.assignments_loaded,\n          remove_loading = _this$state.remove_loading;\n    const system_text = this.props.global.system_text;\n    return React.createElement(\"div\", {\n      className: \"assignments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(PopupWithFunction, {\n      text: system_text.REMOVE_TEXT,\n      name: \"\".concat(assignment_to_remove ? assignment_to_remove.title : \"\", \"?\"),\n      active: assignment_to_remove,\n      submit: this.remove,\n      close: this.close,\n      submit_text: system_text.YES,\n      close_text: system_text.NO,\n      loading: remove_loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), handle_assignment ? React.createElement(HandleAssignment, {\n      loading: loading,\n      edit: this.edit,\n      create: this.create,\n      assignment_to_edit: assignment_to_edit,\n      toggleHandleAssignment: this.toggleHandleAssignment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }) : \" \", React.createElement(\"div\", {\n      className: \"page__flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(BtnWithTooltip, {\n      svg: React.createElement(LibraryAddOutlinedIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }),\n      handleClick: () => this.toggleHandleAssignment(true),\n      tooltip: system_text.CREATE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"assignments__list flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, assignments_loaded && assignments_list && assignments_list.length > 0 ? assignments_list.map(m => {\n      return React.createElement(Assignment, {\n        m: m,\n        system_text: system_text,\n        handleRemove: this.handleRemove,\n        toggleHandleAssignment: this.toggleHandleAssignment,\n        key: m._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    }) : !assignments_loaded ? React.createElement(AssignmentLoader, {\n      arr: [...Array(3).keys()],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : React.createElement(NoData, {\n      text: system_text.NO_TEMPLATES,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  assignments,\n  global\n}) {\n  return {\n    assignments,\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(AssignmentTemplates));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/assignments/AssignmentTemplates.jsx"],"names":["React","Component","withRouter","connect","actions","Assignment","HandleAssignment","PopupWithFunction","apiPostRequest","apiGetRequest","AssignmentLoader","LibraryAddOutlinedIcon","BtnWithTooltip","NoData","AssignmentTemplates","constructor","toggleHandleAssignment","status","assignment_to_edit","setState","handle_assignment","handleRemove","assignment_to_remove","close","remove","state","assignments_list","props","assignments","remove_loading","api","res","id","_id","ok","removeAssignment","setTimeout","create","assignment","loading","addAssignment","result","updateGlobalReducer","edit","updateAssignment","componentDidMount","setDataToAssignmentsReducer","assignments_loaded","render","system_text","global","REMOVE_TEXT","title","YES","NO","CREATE","length","map","m","Array","keys","NO_TEMPLATES","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport Assignment from \"./parts/Assignment\";\nimport HandleAssignment from \"./parts/HandleAssignment\";\nimport PopupWithFunction from \"../../parts/PopupWithFunction\";\nimport { apiPostRequest, apiGetRequest } from \"../../tools/api\";\nimport AssignmentLoader from \"./parts/AssignmentLoader\";\nimport LibraryAddOutlinedIcon from '@material-ui/icons/LibraryAddOutlined';\nimport BtnWithTooltip from \"../../parts/BtnWithTooltip\";\nimport NoData from \"../../parts/NoData\";\n\nclass AssignmentTemplates extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    const api = `assignment`;\n    const res = await apiGetRequest(api);\n    if (res.ok) {\n      this.props.setDataToAssignmentsReducer(\"assignments_list\", res.result);\n      this.setState({\n        assignments_loaded: true,\n      });\n    }\n  }\n  toggleHandleAssignment = (status, assignment_to_edit) => {\n    this.setState({\n      handle_assignment: status,\n      assignment_to_edit,\n    });\n  };\n\n  handleRemove = (assignment_to_remove) => {\n    this.setState({\n      assignment_to_remove,\n    });\n  };\n\n  close = () => {\n    this.setState({\n      assignment_to_remove: \"\",\n      handle_assignment: \"\",\n    });\n  };\n  remove = async () => {\n    const { assignment_to_remove } = this.state;\n    const { assignments_list } = this.props.assignments;\n    this.setState({\n      remove_loading:true\n    })\n    const api = `assignment/delete`;\n    const res = await apiPostRequest(api, { id: assignment_to_remove._id });\n    if (res.ok) {\n      this.props.removeAssignment(assignment_to_remove, assignments_list);\n      this.close();\n    }\n   setTimeout(() => {\n    this.setState({\n      remove_loading:false\n    })\n   }, 400);\n  };\n\n  create = async (assignment) => {\n    const { assignments_list } = this.props.assignments;\n    const api = \"assignment\";\n    this.setState({\n      loading: true,\n    });\n    const res = await apiPostRequest(api, assignment);\n\n    if (res.ok) {\n      this.props.addAssignment(res.result, assignments_list);\n    }\n    this.props.updateGlobalReducer(\n      \"success\",\n      \"Assignment created successfully\"\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  edit = async (assignment) => {\n    const { assignments_list } = this.props.assignments;\n    const api = \"assignment\";\n    this.setState({\n      loading: true,\n    });\n    const res = await apiPostRequest(api, assignment);\n    if (res.ok) {\n      this.props.updateAssignment(res.result, assignments_list);\n    }\n    this.setState({\n      loading: false,\n    });\n  };\n\n  render() {\n    const { assignments_list } = this.props.assignments;\n    const {\n      handle_assignment,\n      assignment_to_edit,\n      assignment_to_remove,\n      loading,\n      assignments_loaded,\n      remove_loading\n    } = this.state;\n    const { system_text } = this.props.global;\n\n    return (\n      <div className=\"assignments\">\n        <PopupWithFunction\n          text={system_text.REMOVE_TEXT}\n          name={`${assignment_to_remove ? assignment_to_remove.title : \"\"}?`}\n          active={assignment_to_remove}\n          submit={this.remove}\n          close={this.close}\n          submit_text={system_text.YES}\n          close_text={system_text.NO}\n          loading ={remove_loading}\n        />\n        {handle_assignment ? (\n          <HandleAssignment\n            loading={loading}\n            edit={this.edit}\n            create={this.create}\n            assignment_to_edit={assignment_to_edit}\n            toggleHandleAssignment={this.toggleHandleAssignment}\n          />\n        ) : (\n          \" \"\n        )}\n\n        <div className=\"page__flex\">\n          <BtnWithTooltip\n            svg={<LibraryAddOutlinedIcon />}\n            handleClick={() => this.toggleHandleAssignment(true)}\n            tooltip={system_text.CREATE}\n          />\n          <ul className=\"assignments__list flex__start\">\n            {assignments_loaded &&\n            assignments_list &&\n            assignments_list.length > 0 ? (\n              assignments_list.map((m) => {\n                return (\n                  <Assignment\n                    m={m}\n                    system_text = {system_text}\n                    handleRemove={this.handleRemove}\n                    toggleHandleAssignment={this.toggleHandleAssignment}\n                    key={m._id}\n                  />\n                );\n              })\n            ) : !assignments_loaded ? (\n              <AssignmentLoader arr={[...Array(3).keys()]} />\n            ) : (\n              <NoData \n              text = {system_text.NO_TEMPLATES}\n              />\n            )}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ assignments, global }) {\n  return { assignments, global };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, actions)(AssignmentTemplates)\n);\n"]},"metadata":{},"sourceType":"module"}