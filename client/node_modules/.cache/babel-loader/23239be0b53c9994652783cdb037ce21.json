{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/system/SystemSettings.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport SelectBox from \"../../../../parts/SelectBox\";\nimport IsraelImg from \"../../../../images/flags/israel.svg\";\nimport UsaImg from \"../../../../images/flags/usa.svg\";\nimport SmallLoader from \"../../../../parts/SmallLoader\";\nconst languages = [{\n  name: \"English\",\n  value: \"english\",\n  img: UsaImg\n}, {\n  name: \"Hebrew\",\n  value: \"hebrew\",\n  img: IsraelImg\n}];\n\nclass SystemSettings extends Component {\n  constructor() {\n    super();\n\n    this.changeLanguage = async language => {\n      const user = this.props.user.user;\n      const api = \"account-settings/update\";\n      const body = {\n        user: user._id,\n        language: language.value\n      };\n\n      try {\n        this.showLoader();\n        await apiPostRequest(api, body).then(res => {\n          this.props.setSystemLanguage(res.result.language);\n          let selected = languages.filter(m => m.value === res.result.language)[0];\n          this.setState({\n            selected\n          });\n        });\n      } catch (error) {}\n\n      setTimeout(() => {\n        this.hideLoader();\n      }, 3000);\n    };\n\n    this.showLoader = () => {\n      this.setState({\n        loading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          show_popup: true\n        });\n      }, 20);\n    };\n\n    this.hideLoader = () => {\n      setTimeout(() => {\n        this.setState({\n          show_popup: false\n        });\n      }, 200);\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const language = this.props.global.language;\n    let selected = languages.filter(m => m.value === language)[0];\n    console.log(selected, language);\n    this.setState({\n      selected\n    });\n  }\n\n  render() {\n    const system_text = this.props.global.system_text;\n    const _this$state = this.state,\n          selected = _this$state.selected,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"settings__system\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, loading ? React.createElement(\"div\", {\n      style: {\n        opacity: show_popup ? 1 : 0\n      },\n      className: \"settings__system__loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"section\", {\n      className: \"settings__system__loading__content flex__column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Language is loading...\"), React.createElement(SmallLoader, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))) : '', React.createElement(\"section\", {\n      className: \"settings__system__section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, system_text.LANGUAGE_SELECT), React.createElement(SelectBox, {\n      value: selected,\n      options: languages,\n      handleSelect: this.changeLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  user,\n  global\n}) {\n  return {\n    user,\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(SystemSettings);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/components/settings/categories/system/SystemSettings.jsx"],"names":["React","Component","connect","actions","apiPostRequest","SelectBox","SmallLoader","languages","name","value","img","UsaImg","IsraelImg","SystemSettings","constructor","changeLanguage","language","user","props","api","body","_id","showLoader","then","res","setSystemLanguage","result","selected","filter","m","setState","error","setTimeout","hideLoader","loading","show_popup","state","componentDidMount","global","console","log","render","system_text","opacity","LANGUAGE_SELECT","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../../actions/actions\";\nimport { apiPostRequest } from \"../../../../tools/api\";\nimport SelectBox from \"../../../../parts/SelectBox\";\nimport IsraelImg from \"../../../../images/flags/israel.svg\";\nimport UsaImg from \"../../../../images/flags/usa.svg\";\nimport SmallLoader from \"../../../../parts/SmallLoader\";\n\nconst languages = [\n  { name: \"English\", value: \"english\", img: UsaImg },\n  { name: \"Hebrew\", value: \"hebrew\", img: IsraelImg },\n];\nclass SystemSettings extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { language } = this.props.global;\n    let selected = languages.filter((m) => m.value === language)[0];\n    console.log(selected, language);\n    this.setState({\n      selected,\n    });\n  }\n  changeLanguage = async (language) => {\n    const { user } = this.props.user;\n    const api = \"account-settings/update\";\n    const body = {\n      user: user._id,\n      language: language.value,\n    };\n    try {\n        this.showLoader()\n      await apiPostRequest(api, body).then((res) => {\n        this.props.setSystemLanguage(res.result.language);\n        let selected = languages.filter(\n          (m) => m.value === res.result.language\n        )[0];\n        this.setState({\n          selected,\n        });\n      });\n    } catch (error) {}\n    setTimeout(() => {\n        this.hideLoader()\n    }, 3000);\n  };\n\n  showLoader = () => {\n      this.setState({\n          loading:true\n      })\n      setTimeout(() => {\n          this.setState({\n              show_popup:true\n          })\n      }, 20);\n  }\n  hideLoader = () => {\n    setTimeout(() => {\n        this.setState({\n            show_popup:false\n        })  \n    }, 200);\n    this.setState({\n        loading:false\n    })\n}\n\n  render() {\n    const { system_text } = this.props.global;\n    const { selected, loading } = this.state;\n    return (\n      <div className=\"settings__system\">\n         {loading ?  <div \n          style ={{\n              opacity:show_popup ? 1 : 0\n          }}\n          className='settings__system__loading'>\n        <section className=\"overlay\"></section>\n                <section className=\"settings__system__loading__content flex__column\">\n                    <h3>Language is loading...</h3>\n                    <SmallLoader active = {true}/>\n                </section>\n          </div> : ''}\n        <section className=\"settings__system__section\">\n          <h3>{system_text.LANGUAGE_SELECT}</h3>\n          <SelectBox\n            value={selected}\n            options={languages}\n            handleSelect={this.changeLanguage}\n          />\n        </section>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ user, global }) {\n  return { user, global };\n}\n\nexport default connect(mapStateToProps, actions)(SystemSettings);\n"]},"metadata":{},"sourceType":"module"}