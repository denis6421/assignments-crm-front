{"ast":null,"code":"import _defineProperty from \"/Users/denis/Desktop/projects/todo/front/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/parts/AssignmentComments.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\nimport SubmitButtons from \"../../../parts/SubmitButtons\";\n\nconst saveContent = content => {\n  return JSON.stringify(convertToRaw(content.getCurrentContent()));\n};\n\nclass AssignmentComments extends Component {\n  constructor() {\n    super();\n\n    this.onEditorStateChange = val => {\n      this.setState({\n        comments: val\n      });\n    };\n\n    this.close = () => {\n      this.setState({\n        loaded: false\n      });\n      setTimeout(() => {\n        this.props.updateParentState(\"assignment_comments\");\n      }, 300);\n    };\n\n    this.save = async comments => {\n      const assignment = this.props.assignment;\n\n      const updated = _objectSpread({}, assignment);\n\n      this.setState({\n        loading: true\n      });\n      const rawDraftContentState = await saveContent(comments);\n      updated[\"comments\"] = rawDraftContentState;\n      await this.props.updateAssignment(updated);\n      this.close();\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const assignment = this.props.assignment;\n    setTimeout(() => {\n      this.setState({\n        loaded: true\n      });\n    }, 20);\n    this.setState({\n      loaded: true\n    });\n    let comments = \"\";\n\n    if (assignment.comments) {\n      let content = convertFromRaw(JSON.parse(assignment.comments));\n      comments = EditorState.createWithContent(content);\n    }\n\n    this.setState({\n      comments\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          comments = _this$state.comments,\n          loaded = _this$state.loaded,\n          loading = _this$state.loading;\n    const _this$props = this.props,\n          assignment = _this$props.assignment,\n          system_text = _this$props.system_text;\n    return React.createElement(\"div\", {\n      id: loaded ? \"employee__assignment__comments--active\" : \"\",\n      className: \"employee__assignment__comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"flex__column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => this.close(),\n      className: \"employee__assignment__comments__close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(CloseOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, system_text.ASSIGNMENT), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"\".concat(assignment.title))), React.createElement(\"div\", {\n      className: \"employee__assignment__comments__editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      editorState: comments,\n      toolbarClassName: \"toolbarClassName\",\n      wrapperClassName: \"wrapperClassName\",\n      editorClassName: \"editorClassName\",\n      onEditorStateChange: this.onEditorStateChange,\n      placeholder: system_text.COMMENT,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(SubmitButtons, {\n      submit: () => comments ? this.save(comments) : '',\n      loading: loading,\n      close_text: system_text.CANCEL,\n      close: this.close,\n      submit_text: system_text.SAVE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AssignmentComments;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/front/client/src/components/employee-page/parts/AssignmentComments.jsx"],"names":["React","Component","Editor","convertFromRaw","convertToRaw","EditorState","CloseOutlinedIcon","SubmitButtons","saveContent","content","JSON","stringify","getCurrentContent","AssignmentComments","constructor","onEditorStateChange","val","setState","comments","close","loaded","setTimeout","props","updateParentState","save","assignment","updated","loading","rawDraftContentState","updateAssignment","state","componentDidMount","parse","createWithContent","render","system_text","ASSIGNMENT","title","COMMENT","CANCEL","SAVE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { convertFromRaw, convertToRaw, EditorState } from \"draft-js\";\nimport CloseOutlinedIcon from \"@material-ui/icons/CloseOutlined\";\nimport SubmitButtons from \"../../../parts/SubmitButtons\";\nconst saveContent = (content) => {\n  return JSON.stringify(convertToRaw(content.getCurrentContent()));\n};\n\nclass AssignmentComments extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { assignment } = this.props;\n    setTimeout(() => {\n      this.setState({\n        loaded: true,\n      });\n    }, 20);\n    this.setState({\n      loaded: true,\n    });\n    let comments = \"\";\n    if (assignment.comments) {\n      let content = convertFromRaw(JSON.parse(assignment.comments));\n\n      comments = EditorState.createWithContent(content);\n    }\n    this.setState({\n      comments,\n    });\n  }\n\n  onEditorStateChange = (val) => {\n    this.setState({\n      comments: val,\n    });\n  };\n\n  close = () => {\n    this.setState({\n      loaded: false,\n    });\n    setTimeout(() => {\n      this.props.updateParentState(\"assignment_comments\");\n    }, 300);\n  };\n\n  save = async (comments) => {\n    const { assignment } = this.props;\n    const updated = { ...assignment };\n    this.setState({\n      loading:true\n    })\n    const rawDraftContentState = await saveContent(comments);\n    updated[\"comments\"] = rawDraftContentState;\n    await this.props.updateAssignment(updated);\n    this.close();\n  };\n\n  render() {\n    const { comments, loaded, loading } = this.state;\n    const { assignment, system_text } = this.props;\n    return (\n      <div\n        id={loaded ? \"employee__assignment__comments--active\" : \"\"}\n        className=\"employee__assignment__comments\"\n      >\n        <section className=\"overlay\"></section>\n        <form className=\"flex__column\">\n          <button\n          type ='button'\n          onClick = {() => this.close()}\n          className='employee__assignment__comments__close'\n          ><CloseOutlinedIcon /></button>\n          <header>\n            <h2>{system_text.ASSIGNMENT}</h2>\n            <h3>{`${assignment.title}`}</h3>\n          </header>\n          <div className=\"employee__assignment__comments__editor\">\n            <Editor\n              editorState={comments}\n              toolbarClassName=\"toolbarClassName\"\n              wrapperClassName=\"wrapperClassName\"\n              editorClassName=\"editorClassName\"\n              onEditorStateChange={this.onEditorStateChange}\n              placeholder={system_text.COMMENT}\n            />\n          </div>\n          <SubmitButtons\n          submit = {() => comments ?this.save(comments) : '' }\n          loading ={loading}\n          close_text =  {system_text.CANCEL}\n          close = {this.close}\n          submit_text = {system_text.SAVE}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AssignmentComments;\n"]},"metadata":{},"sourceType":"module"}