{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/todo/client/src/parts/uploader/Uploader.jsx\";\nimport React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport Backendless from \"backendless\";\nimport AddPhotoAlternateOutlinedIcon from \"@material-ui/icons/AddPhotoAlternateOutlined\";\nimport SmallLoader from \"../SmallLoader\";\nBackendless.initApp(\"0C7F99A6-3715-126A-FF3C-3387261D5C00\", \"957C469D-E5DE-4C1D-8A8B-A3BE62BF1CD2\");\n\nclass Upload extends Component {\n  constructor() {\n    super();\n\n    this.handleFileSelect = async files => {\n      const property_name = this.props.property_name;\n      let file = files[0];\n      this.setState({\n        loading: true,\n        image_loaded: false\n      });\n\n      try {\n        await Backendless.Files.upload(file, \"/myFiles\", true).then(result => {\n          let url = result.fileURL;\n          this.props.update(property_name, url);\n          this.setState({\n            loading: false\n          });\n        });\n      } catch (error) {\n        await this.props.updateGlobalReducer(\"error\", \"Failed to change profile image\");\n      }\n    };\n\n    this.onLoad = () => {\n      this.setState({\n        image_loaded: true\n      });\n    };\n\n    this.state = {\n      is_drag: false\n    };\n  }\n\n  render() {\n    const value = this.props.value;\n    const _this$state = this.state,\n          image_loaded = _this$state.image_loaded,\n          loading = _this$state.loading;\n    return React.createElement(\"div\", {\n      className: \"uploader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      onDrop: acceptedFiles => this.handleFileSelect(acceptedFiles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), value ? React.createElement(React.Fragment, null, React.createElement(\"img\", {\n      className: \"uploader__img\",\n      onLoad: () => this.onLoad(),\n      style: {\n        opacity: !loading && image_loaded ? 1 : 0,\n        transition: \"0.3s all\"\n      },\n      src: value,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), loading || !image_loaded ? React.createElement(SmallLoader, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : '') : React.createElement(AddPhotoAlternateOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps({\n  global\n}) {\n  return {\n    global\n  };\n}\n\nexport default connect(mapStateToProps, actions)(Upload);","map":{"version":3,"sources":["/Users/denis/Desktop/projects/todo/client/src/parts/uploader/Uploader.jsx"],"names":["React","Component","Dropzone","AddIcon","connect","actions","Backendless","AddPhotoAlternateOutlinedIcon","SmallLoader","initApp","Upload","constructor","handleFileSelect","files","property_name","props","file","setState","loading","image_loaded","Files","upload","then","result","url","fileURL","update","error","updateGlobalReducer","onLoad","state","is_drag","render","value","width","height","acceptedFiles","opacity","transition","mapStateToProps","global"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport Backendless from \"backendless\";\nimport AddPhotoAlternateOutlinedIcon from \"@material-ui/icons/AddPhotoAlternateOutlined\";\nimport SmallLoader from \"../SmallLoader\";\n\nBackendless.initApp(\n  \"0C7F99A6-3715-126A-FF3C-3387261D5C00\",\n  \"957C469D-E5DE-4C1D-8A8B-A3BE62BF1CD2\"\n);\n\nclass Upload extends Component {\n  constructor() {\n    super();\n    this.state = {\n      is_drag: false,\n    };\n  }\n  handleFileSelect = async (files) => {\n    const { property_name } = this.props;\n    let file = files[0];\n    this.setState({\n      loading:true,\n      image_loaded:false\n    })\n    try {\n      await Backendless.Files.upload(file, \"/myFiles\", true).then((result) => {\n        let url = result.fileURL;\n        this.props.update(property_name, url);\n        this.setState({\n          loading:false\n        })\n      });\n     \n    } catch (error) {\n      await this.props.updateGlobalReducer(\"error\", \"Failed to change profile image\");\n      \n    }\n  \n  };\n\n  onLoad = () => {\n    this.setState({\n      image_loaded: true,\n    });\n  };\n  render() {\n    const { value } = this.props;\n    const { image_loaded, loading } = this.state;\n\n   \n    return (\n      <div className=\"uploader\">\n        <Dropzone\n          style={{ width: \"100%\", height: \"100%\" }}\n          onDrop={(acceptedFiles) => this.handleFileSelect(acceptedFiles)}\n        ></Dropzone>\n        {value ? (\n          <>\n            <img\n              className=\"uploader__img\"\n              onLoad={() => this.onLoad()}\n              style={{\n                opacity: !loading && image_loaded ? 1 : 0,\n                transition: \"0.3s all\",\n              }}\n              src={value}\n              alt=\"\"\n            />\n            {loading || !image_loaded ? <SmallLoader active = {true}/> : ''}\n          </>\n        ) : (\n          <AddPhotoAlternateOutlinedIcon />\n        )}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ global }) {\n  return { global };\n}\n\nexport default connect(mapStateToProps, actions)(Upload);\n"]},"metadata":{},"sourceType":"module"}